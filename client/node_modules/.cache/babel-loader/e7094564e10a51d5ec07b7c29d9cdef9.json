{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\dashboard\\\\admin\\\\products\\\\addedit\\\\upload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { getTokenCookie } from 'utils/tools';\nimport Loader from 'utils/loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PicUpload = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const formikImg = useFormik({\n    initialValues: {\n      pic: ''\n    },\n    validationSchema: Yup.object({\n      pic: Yup.mixed().required('A file is required')\n    }),\n    onSubmit: values => {\n      setLoading(true);\n      console.log(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: formikImg.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.File, {\n          id: \"file\",\n          name: \"file\",\n          onChange: event => {\n            formikImg.setFieldValue(\"pic\", event.target.files[0]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), formikImg.errors.pic && formikImg.touched.pic ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(PicUpload, \"qEbYO7ulqfMVKhUBTCMSp4T8lu8=\", false, function () {\n  return [useFormik];\n});\n\n_c = PicUpload;\nexport default PicUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"PicUpload\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/dashboard/admin/products/addedit/upload.js"],"names":["React","useState","Button","Form","useFormik","Yup","axios","getTokenCookie","Loader","PicUpload","loading","setLoading","formikImg","initialValues","pic","validationSchema","object","mixed","required","onSubmit","values","console","log","handleSubmit","event","setFieldValue","target","files","errors","touched"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,OAAQC,MAAR,MAAoB,cAApB;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMW,SAAS,GAAGR,SAAS,CAAC;AACxBS,IAAAA,aAAa,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP,KADS;AAExBC,IAAAA,gBAAgB,EAAEV,GAAG,CAACW,MAAJ,CAAW;AACzBF,MAAAA,GAAG,EAAET,GAAG,CAACY,KAAJ,GAAYC,QAAZ,CAAqB,oBAArB;AADoB,KAAX,CAFM;AAKxBC,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AAClBT,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH;AARuB,GAAD,CAA3B;AAWA,sBACI;AAAA,cACMV,OAAO,gBACL,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADK,gBAGL,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEE,SAAS,CAACW,YAA1B;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA,gCACI,QAAC,IAAD,CAAM,IAAN;AACI,UAAA,EAAE,EAAC,MADP;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,QAAQ,EAAGC,KAAD,IAAW;AACjBZ,YAAAA,SAAS,CAACa,aAAV,CAAwB,KAAxB,EAA+BD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAA/B;AACH;AALL;AAAA;AAAA;AAAA;AAAA,gBADJ,EAQMf,SAAS,CAACgB,MAAV,CAAiBd,GAAjB,IAAwBF,SAAS,CAACiB,OAAV,CAAkBf,GAA1C,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,GAEI,IAVV;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAeI,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,WADZ;AAEI,QAAA,IAAI,EAAC,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR,mBADJ;AA+BH,CA7CD;;GAAML,S;UAGgBL,S;;;KAHhBK,S;AA+CN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport { getTokenCookie } from 'utils/tools';\r\nimport  Loader from 'utils/loader';\r\n\r\nconst PicUpload = () => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const formikImg = useFormik({\r\n        initialValues: { pic: '' },\r\n        validationSchema: Yup.object({\r\n            pic: Yup.mixed().required('A file is required')\r\n        }),\r\n        onSubmit: (values) => {\r\n            setLoading(true);\r\n            console.log(values);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            { loading ?\r\n                <Loader />\r\n                :\r\n                <Form onSubmit={formikImg.handleSubmit}>\r\n                    <Form.Group>\r\n                        <Form.File \r\n                            id='file'\r\n                            name='file'\r\n                            onChange={(event) => {\r\n                                formikImg.setFieldValue(\"pic\", event.target.files[0])\r\n                            }}\r\n                        />\r\n                        { formikImg.errors.pic && formikImg.touched.pic ?\r\n                            <div>Error</div>\r\n                            : null\r\n                        }\r\n\r\n                    </Form.Group>\r\n                    <Button\r\n                        variant='secondary'\r\n                        type='submit'\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </Form>\r\n        \r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PicUpload;"]},"metadata":{},"sourceType":"module"}