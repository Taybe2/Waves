{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\dashboard\\\\user\\\\stepper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { errorHelper } from 'utils/tools';\nimport Loader from 'utils/tools';\nimport { Modal } from 'react-bootstrap';\nimport { TextField, Button, Stepper, Step, StepLabel } from '@mui/material';\nimport usersReducer from 'store/reducers/users.reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EmailStepper = _ref => {\n  _s();\n\n  let {\n    users\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const [emailModal, setEmailModal] = useState(false);\n  const notifications = useSelector(state => state.notifications);\n  const dispatch = useDispatch();\n  const [activeStep, setActiveStep] = useState(0);\n  const steps = ['Enter old email', 'Enter new email', 'Are you sure?'];\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      email: '',\n      newemail: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().required('This is required').email('This is not a valid email').test('match', 'Please check your email', email => {\n        return email === users.data.email;\n      }),\n      newemail: Yup.string().required('This is required').email('This is not a valid email').test('match', 'Please check your email', newemail => {\n        return newemail !== users.data.email;\n      })\n    }),\n    onSubmit: values => {\n      console.log(values);\n    }\n  });\n\n  const closeModal = () => setEmailModal(false);\n\n  const openModal = () => setEmailModal(true);\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const nextBtn = () => /*#__PURE__*/_jsxDEV(Button, {\n    className: \"mt-3\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    children: \"Next\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n\n  const backBtn = () => /*#__PURE__*/_jsxDEV(Button, {\n    className: \"mt-3 ml-2\",\n    variant: \"contained\",\n    onClick: handleBack,\n    children: \"Back\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"mt-3 article_form\",\n      style: {\n        maxWidth: '250px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            width: '100%'\n          },\n          name: \"emailstatic\",\n          label: \"Email\",\n          value: users.data.email,\n          variant: \"outlined\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mb-3\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: openModal,\n        children: \"Edit email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      centered: true,\n      show: emailModal,\n      onHide: closeModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Update your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Stepper, {\n          activeStep: activeStep,\n          children: steps.map((label, index) => {\n            return /*#__PURE__*/_jsxDEV(Step, {\n              children: /*#__PURE__*/_jsxDEV(StepLabel, {\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), activeStep === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: '100%'\n            },\n            name: \"emailstatic\",\n            label: \"Enter your current email\",\n            variant: \"outlined\",\n            ...formik.getFieldProps('email'),\n            ...errorHelper(formik, 'email')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), formik.values.email && !formik.errors.email ? nextBtn() : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EmailStepper, \"cwYB4YBmpZTOrNuD7E2MwP9uhdo=\", false, function () {\n  return [useSelector, useDispatch, useFormik];\n});\n\n_c = EmailStepper;\nexport default EmailStepper;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailStepper\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/dashboard/user/stepper.js"],"names":["React","useState","useEffect","useFormik","Yup","useSelector","useDispatch","errorHelper","Loader","Modal","TextField","Button","Stepper","Step","StepLabel","usersReducer","EmailStepper","users","loading","setLoading","emailModal","setEmailModal","notifications","state","dispatch","activeStep","setActiveStep","steps","formik","enableReinitialize","initialValues","email","newemail","validationSchema","object","string","required","test","data","onSubmit","values","console","log","closeModal","openModal","handleNext","prevActiveStep","handleBack","nextBtn","backBtn","maxWidth","width","map","label","index","getFieldProps","errors"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,SACIC,SADJ,EAEIC,MAFJ,EAGIC,OAHJ,EAIIC,IAJJ,EAKIC,SALJ,QAMO,eANP;AAOA,OAAOC,YAAP,MAAyB,8BAAzB;;;;AAEA,MAAMC,YAAY,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMqB,aAAa,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACD,aAAhB,CAAjC;AACA,QAAME,QAAQ,GAAGlB,WAAW,EAA5B;AAEA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM0B,KAAK,GAAG,CAAC,iBAAD,EAAoB,iBAApB,EAAuC,eAAvC,CAAd;AAEA,QAAMC,MAAM,GAAGzB,SAAS,CAAC;AACrB0B,IAAAA,kBAAkB,EAAE,IADC;AAErBC,IAAAA,aAAa,EAAE;AAACC,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,QAAQ,EAAE;AAAtB,KAFM;AAGrBC,IAAAA,gBAAgB,EAAE7B,GAAG,CAAC8B,MAAJ,CAAW;AACzBH,MAAAA,KAAK,EAAE3B,GAAG,CAAC+B,MAAJ,GACFC,QADE,CACO,kBADP,EAEFL,KAFE,CAEI,2BAFJ,EAGFM,IAHE,CAGG,OAHH,EAGY,yBAHZ,EAGwCN,KAAD,IAAW;AACjD,eAAOA,KAAK,KAAKd,KAAK,CAACqB,IAAN,CAAWP,KAA5B;AACH,OALE,CADkB;AAOzBC,MAAAA,QAAQ,EAAE5B,GAAG,CAAC+B,MAAJ,GACLC,QADK,CACI,kBADJ,EAELL,KAFK,CAEC,2BAFD,EAGLM,IAHK,CAGA,OAHA,EAGS,yBAHT,EAGqCL,QAAD,IAAc;AACpD,eAAOA,QAAQ,KAAKf,KAAK,CAACqB,IAAN,CAAWP,KAA/B;AACH,OALK;AAPe,KAAX,CAHG;AAiBrBQ,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH;AAnBoB,GAAD,CAAxB;;AAsBA,QAAMG,UAAU,GAAG,MAAMtB,aAAa,CAAC,KAAD,CAAtC;;AACA,QAAMuB,SAAS,GAAI,MAAMvB,aAAa,CAAC,IAAD,CAAtC;;AAEA,QAAMwB,UAAU,GAAG,MAAM;AACrBnB,IAAAA,aAAa,CAAEoB,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrBrB,IAAAA,aAAa,CAAEoB,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACH,GAFD;;AAIA,QAAME,OAAO,GAAG,mBACZ,QAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAyB,IAAA,OAAO,EAAC,WAAjC;AAA6C,IAAA,KAAK,EAAC,SAAnD;AAA6D,IAAA,OAAO,EAAEH,UAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAKA,QAAMI,OAAO,GAAG,mBACZ,QAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,OAAO,EAAC,WAAtC;AAAkD,IAAA,OAAO,EAAEF,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAMA,sBACI;AAAA,4BACI;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAoC,MAAA,KAAK,EAAE;AAACG,QAAAA,QAAQ,EAAE;AAAX,OAA3C;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI,QAAC,SAAD;AACI,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WADX;AAEI,UAAA,IAAI,EAAC,aAFT;AAGI,UAAA,KAAK,EAAC,OAHV;AAII,UAAA,KAAK,EAAElC,KAAK,CAACqB,IAAN,CAAWP,KAJtB;AAKI,UAAA,OAAO,EAAC,UALZ;AAMI,UAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI,QAAC,MAAD;AACI,QAAA,SAAS,EAAC,MADd;AAEI,QAAA,OAAO,EAAC,WAFZ;AAGI,QAAA,KAAK,EAAC,SAHV;AAII,QAAA,OAAO,EAAEa,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAqBI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,IAAZ;AAAiB,MAAA,QAAQ,MAAzB;AAA0B,MAAA,IAAI,EAAExB,UAAhC;AAA4C,MAAA,MAAM,EAAEuB,UAApD;AAAA,8BACI,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA,gCACI,QAAC,OAAD;AAAS,UAAA,UAAU,EAAElB,UAArB;AAAA,oBACME,KAAK,CAACyB,GAAN,CAAU,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1B,gCACI,QAAC,IAAD;AAAA,qCACI,QAAC,SAAD;AAAA,0BAAYD;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ,eAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH,WANC;AADN;AAAA;AAAA;AAAA;AAAA,gBADJ,EAUM7B,UAAU,KAAK,CAAf,gBACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI,QAAC,SAAD;AACI,YAAA,KAAK,EAAE;AAAE0B,cAAAA,KAAK,EAAE;AAAT,aADX;AAEI,YAAA,IAAI,EAAC,aAFT;AAGI,YAAA,KAAK,EAAC,0BAHV;AAII,YAAA,OAAO,EAAC,UAJZ;AAAA,eAKQvB,MAAM,CAAC2B,aAAP,CAAqB,OAArB,CALR;AAAA,eAMQhD,WAAW,CAACqB,MAAD,EAAS,OAAT;AANnB;AAAA;AAAA;AAAA;AAAA,kBADJ,EASMA,MAAM,CAACY,MAAP,CAAcT,KAAd,IAAuB,CAACH,MAAM,CAAC4B,MAAP,CAAczB,KAAtC,GACMiB,OAAO,EADb,GAGM,IAZZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,GAkBE,IA5BR;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA,kBADJ;AA4DH,CAjHD;;GAAMhC,Y;UAGoBX,W,EACLC,W,EAKFH,S;;;KATba,Y;AAmHN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { errorHelper } from 'utils/tools';\r\nimport Loader from 'utils/tools';\r\n\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nimport {\r\n    TextField,\r\n    Button,\r\n    Stepper,\r\n    Step,\r\n    StepLabel\r\n} from '@mui/material';\r\nimport usersReducer from 'store/reducers/users.reducer';\r\n\r\nconst EmailStepper = ({ users }) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [emailModal, setEmailModal] = useState(false);\r\n    const notifications = useSelector(state => state.notifications);\r\n    const dispatch = useDispatch();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const steps = ['Enter old email', 'Enter new email', 'Are you sure?'];\r\n\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {email: '', newemail: ''},\r\n        validationSchema: Yup.object({\r\n            email: Yup.string()\r\n                .required('This is required')\r\n                .email('This is not a valid email')\r\n                .test('match', 'Please check your email', (email) => {\r\n                    return email === users.data.email\r\n                }),\r\n            newemail: Yup.string()\r\n                .required('This is required')\r\n                .email('This is not a valid email')\r\n                .test('match', 'Please check your email', (newemail) => {\r\n                    return newemail !== users.data.email\r\n                })\r\n        }),\r\n        onSubmit: (values) => {\r\n            console.log(values);\r\n        }\r\n    });\r\n\r\n    const closeModal = () => setEmailModal(false);\r\n    const openModal  = () => setEmailModal(true);\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1)\r\n    }\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1)\r\n    }\r\n\r\n    const nextBtn = () => (\r\n        <Button className='mt-3' variant='contained' color='primary' onClick={handleNext}>\r\n            Next\r\n        </Button>\r\n    )\r\n    const backBtn = () => (\r\n        <Button className='mt-3 ml-2' variant='contained' onClick={handleBack}>\r\n            Back\r\n        </Button>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <form className='mt-3 article_form' style={{maxWidth: '250px'}}>\r\n                <div className='form-group'>\r\n                    <TextField \r\n                        style={{ width: '100%' }}\r\n                        name=\"emailstatic\"\r\n                        label='Email'\r\n                        value={users.data.email}\r\n                        variant='outlined'\r\n                        disabled\r\n                    />\r\n                </div>\r\n                <Button\r\n                    className='mb-3'\r\n                    variant='contained'\r\n                    color='primary'\r\n                    onClick={openModal}\r\n                >\r\n                    Edit email\r\n                </Button>\r\n            </form>\r\n            <Modal size=\"lg\" centered show={emailModal} onHide={closeModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Update your email</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Stepper activeStep={activeStep}>\r\n                        { steps.map((label, index) => {\r\n                            return (\r\n                                <Step key={index}>\r\n                                    <StepLabel>{label}</StepLabel>\r\n                                </Step>\r\n                            );\r\n                        })}\r\n                    </Stepper>\r\n                    { activeStep === 0 ?\r\n                        <div className='form-group'>\r\n                            <TextField\r\n                                style={{ width: '100%' }}\r\n                                name=\"emailstatic\"\r\n                                label='Enter your current email'\r\n                                variant='outlined'\r\n                                {...formik.getFieldProps('email')}\r\n                                {...errorHelper(formik, 'email')}\r\n                            />\r\n                            { formik.values.email && !formik.errors.email ?\r\n                                    nextBtn()\r\n                                : \r\n                                    null\r\n                            }\r\n                        </div>\r\n                        \r\n                        :\r\n                        null\r\n                    }\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmailStepper;"]},"metadata":{},"sourceType":"module"}