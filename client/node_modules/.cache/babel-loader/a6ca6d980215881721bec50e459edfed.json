{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\dashboard\\\\user\\\\info.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport DashboardLayout from 'components/hoc/dashboardLayout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { errorHelper } from 'utils/tools';\nimport { useDispatch } from 'react-redux';\nimport { Button, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserInfo = _ref => {\n  _s();\n\n  let {\n    users\n  } = _ref;\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      firstname: users.data.firstname,\n      lastname: users.data.lastname\n    },\n    validationSchema: Yup.object({\n      firstname: Yup.string().min(3, '3 char min').max(30, '30 char  max').required('Sorry, you need the firstname'),\n      lastname: Yup.string().min(3, '3 char min').max(30, '30 char  max').required('Sorry, you need the firstname')\n    }),\n    onSubmit: values => {\n      console.log(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    title: \"User Information\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"mt-3 article_form\",\n      style: {\n        maxWidth: '250px'\n      },\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            width: '100%'\n          },\n          name: \"firstname\",\n          label: \"Enter your firstname\",\n          variant: \"outlined\",\n          ...formik.getFieldProps('firstname'),\n          ...errorHelper(formik, 'firstname')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            width: '100%'\n          },\n          name: \"lastname\",\n          label: \"Enter your lastname\",\n          variant: \"outlined\",\n          ...formik.getFieldProps('lastname'),\n          ...errorHelper(formik, 'lastname')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mb-3\",\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Edit profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserInfo, \"snIeeAJX6ddd+yTscBhJ9TqRTSM=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = UserInfo;\nexport default UserInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/dashboard/user/info.js"],"names":["React","DashboardLayout","useFormik","Yup","errorHelper","useDispatch","Button","TextField","UserInfo","users","dispatch","formik","enableReinitialize","initialValues","firstname","data","lastname","validationSchema","object","string","min","max","required","onSubmit","values","console","log","maxWidth","handleSubmit","width","getFieldProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport DashboardLayout from 'components/hoc/dashboardLayout';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { errorHelper } from 'utils/tools';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, TextField } from '@mui/material';\r\n\r\nconst UserInfo = ({ users }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik ({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            firstname: users.data.firstname,\r\n            lastname: users.data.lastname\r\n        },\r\n        validationSchema: Yup.object({\r\n            firstname: Yup.string()\r\n                .min(3, '3 char min')\r\n                .max(30, '30 char  max')\r\n                .required('Sorry, you need the firstname'),\r\n            lastname: Yup.string()\r\n                .min(3, '3 char min')\r\n                .max(30, '30 char  max')\r\n                .required('Sorry, you need the firstname')\r\n        }),\r\n        onSubmit: (values) => {\r\n            console.log(values);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <DashboardLayout title=\"User Information\">\r\n            <form className='mt-3 article_form' style={{maxWidth: '250px'}}\r\n                onSubmit={formik.handleSubmit}\r\n            >\r\n                <div className='form-group'>\r\n                    <TextField \r\n                        style={{ width: '100%' }}\r\n                        name=\"firstname\"\r\n                        label='Enter your firstname'\r\n                        variant='outlined'\r\n                        {...formik.getFieldProps('firstname')}\r\n                        {...errorHelper(formik, 'firstname')}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <TextField \r\n                        style={{ width: '100%' }}\r\n                        name=\"lastname\"\r\n                        label='Enter your lastname'\r\n                        variant='outlined'\r\n                        {...formik.getFieldProps('lastname')}\r\n                        {...errorHelper(formik, 'lastname')}\r\n                    />\r\n                </div>\r\n                <Button \r\n                    className='mb-3'\r\n                    variant='contained'\r\n                    color='primary'\r\n                    type='submit'\r\n                >\r\n                    Edit profile\r\n                </Button>\r\n            </form>\r\n        </DashboardLayout>\r\n    );\r\n};\r\n\r\nexport default UserInfo;"]},"metadata":{},"sourceType":"module"}