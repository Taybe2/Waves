{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\hoc\\\\authGuard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Loader from 'utils/loader';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthGuard(ComposedComponent) {\n  var _s = $RefreshSig$();\n\n  const AuthenticationCheck = props => {\n    _s();\n\n    const [isAuth, setIsAuth] = useState(false);\n    const users = useSelector(state => state.users);\n    const navigate = useNavigate();\n    useEffect(() => {\n      if (!users.auth) {\n        navigate('/');\n      } else {\n        setIsAuth(true);\n      }\n    }, [navigate, users.auth]);\n\n    if (!isAuth) {\n      return /*#__PURE__*/_jsxDEV(Loader, {\n        full: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(ComposedComponent, {\n        users: users,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  _s(AuthenticationCheck, \"5PvLs6KfLBj0REw2zgWMQEyGPYI=\", false, function () {\n    return [useSelector, useNavigate];\n  });\n\n  return AuthenticationCheck();\n}\n_c = AuthGuard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/hoc/authGuard.js"],"names":["React","useState","useEffect","useSelector","Loader","useNavigate","AuthGuard","ComposedComponent","AuthenticationCheck","props","isAuth","setIsAuth","users","state","navigate","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,eAAe,SAASC,SAAT,CAAmBC,iBAAnB,EAAsC;AAAA;;AACjD,QAAMC,mBAAmB,GAAKC,KAAF,IAAa;AAAA;;AACrC,UAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,UAAMW,KAAK,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,UAAME,QAAQ,GAAGT,WAAW,EAA5B;AAEAH,IAAAA,SAAS,CAAC,MAAM;AACZ,UAAG,CAACU,KAAK,CAACG,IAAV,EAAgB;AACZD,QAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,OAFD,MAEO;AACHH,QAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,KANQ,EAMN,CAACG,QAAD,EAAWF,KAAK,CAACG,IAAjB,CANM,CAAT;;AAQA,QAAG,CAACL,MAAJ,EAAY;AACR,0BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cADJ;AAIH,KALD,MAKO;AACH,0BACI,QAAC,iBAAD;AAAmB,QAAA,KAAK,EAAEE,KAA1B;AAAA,WAAqCH;AAArC;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACJ,GAvBD;;AADiD,KAC3CD,mBAD2C;AAAA,YAG/BL,WAH+B,EAI5BE,WAJ4B;AAAA;;AAyBjD,SAAOG,mBAAmB,EAA1B;AACH;KA1BuBF,S","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Loader from 'utils/loader';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function AuthGuard(ComposedComponent) {\r\n    const AuthenticationCheck = ( props ) => {\r\n        const [isAuth, setIsAuth] = useState(false);\r\n        const users = useSelector(state => state.users);\r\n        const navigate = useNavigate();\r\n\r\n        useEffect(() => {\r\n            if(!users.auth) {\r\n                navigate('/');\r\n            } else {\r\n                setIsAuth(true);\r\n            }\r\n        }, [navigate, users.auth]);\r\n\r\n        if(!isAuth) {\r\n            return(\r\n                <Loader full={true} />\r\n\r\n            );\r\n        } else {\r\n            return (\r\n                <ComposedComponent users={users} {...props} />\r\n            )\r\n        }\r\n    }\r\n    return AuthenticationCheck();\r\n}"]},"metadata":{},"sourceType":"module"}