{"ast":null,"code":"import axios from \"axios\";\nimport * as actions from './index';\nimport { getAuthHeader, removeTokenCookie, getTokenCookie } from \"utils/tools\";\naxios.defaults.headers.post['Content-Type'] = 'application-json';\nexport const userRegister = values => {\n  return async dispatch => {\n    try {\n      const user = await axios.post(`/api/auth/register`, {\n        email: values.email,\n        password: values.password\n      });\n      dispatch(actions.userAuthenticate({\n        data: user.data.user,\n        auth: true\n      }));\n      dispatch(actions.successGlobal('Welcome! Check your mail to verify your account.'));\n    } catch (error) {\n      dispatch(actions.errorGlobal(error.response.data.message));\n    }\n  };\n};\nexport const userSignIn = values => {\n  return async dispatch => {\n    try {\n      const user = await axios.post(`/api/auth/signin`, {\n        email: values.email,\n        password: values.password\n      });\n      dispatch(actions.userAuthenticate({\n        data: user.data.user,\n        auth: true\n      }));\n      dispatch(actions.successGlobal('Welcome!'));\n    } catch (error) {\n      dispatch(actions.errorGlobal(error.response.data.message));\n    }\n  };\n};\nexport const userIsAuth = () => {\n  return async dispatch => {\n    try {\n      if (!getTokenCookie()) {\n        throw new Error();\n      }\n\n      const user = await axios.get('/api/auth/isauth', getAuthHeader());\n      dispatch(actions.userAuthenticate({\n        data: user.data,\n        auth: true\n      }));\n    } catch (error) {\n      dispatch(actions.userAuthenticate({\n        data: {},\n        auth: false\n      }));\n    }\n  };\n};\nexport const userSignOut = () => {\n  return async dispatch => {\n    removeTokenCookie();\n    dispatch(actions.userSignOut());\n    dispatch(actions.successGlobal('Coodbye!'));\n  };\n};\nexport const userUpdateProfile = data => {\n  return async (dispatch, getState) => {\n    try {\n      const profile = await axios.patch('/api/users/profile', {\n        data: data\n      }, getAuthHeader());\n      const userdata = { ...getState().users.data,\n        firstname: profile.data.firstname,\n        lastname: profile.data.lastname\n      };\n      dispatch(actions.userUpdateProfile(userdata));\n      dispatch(actions.successGlobal('Profile updated!'));\n    } catch (error) {\n      dispatch(actions.errorGlobal(error.response.data.message));\n    }\n  };\n};\nexport const userChangeEmail = data => {\n  return async dispatch => {\n    try {\n      await axios.patch(`/api/users/email`, {\n        email: data.email,\n        newemail: data.newemail\n      }, getAuthHeader());\n      dispatch(actions.userChangeEmail(data.newemail));\n      dispatch(actions.successGlobal('Email updated! Remember to verify your new email.'));\n    } catch (error) {\n      dispatch(actions.errorGlobal(error.response.data.message));\n    }\n  };\n};\nexport const userAddToCart = item => {\n  return async (dispatch, getState) => {\n    try {\n      const cart = getState().users.cart;\n      dispatch(actions.userAddToCart([...cart, item]));\n      dispatch(actions.successGlobal(`${item.model} was added to cart.`));\n    } catch (error) {\n      dispatch(actions.errorGlobal(error.response.data.message));\n    }\n  };\n};\nexport const userRemoveFromCart = position => {\n  return async (dispatch, getState) => {\n    try {\n      const cart = getState().users.cart;\n      cart.splice(position, 1);\n      dispatch(actions.userAddToCart(cart));\n    } catch (error) {\n      dispatch(actions.errorGlobal(error.response.data.message));\n    }\n  };\n};\nexport const userPurchaseSuccess = orderId => {\n  return async dispatch => {\n    try {\n      const user = await axios.post(`/api/transaction/`, {\n        orderId: orderId\n      }, getAuthHeader());\n      dispatch(actions.successGlobal('Thank you for your purchase.'));\n      dispatch(actions.userPurchaseSuccess(user.data));\n    } catch (error) {\n      dispatch(actions.errorGlobal(error.response.data.message));\n    }\n  };\n};","map":{"version":3,"sources":["C:/React/waves/client/src/store/actions/user.actions.js"],"names":["axios","actions","getAuthHeader","removeTokenCookie","getTokenCookie","defaults","headers","post","userRegister","values","dispatch","user","email","password","userAuthenticate","data","auth","successGlobal","error","errorGlobal","response","message","userSignIn","userIsAuth","Error","get","userSignOut","userUpdateProfile","getState","profile","patch","userdata","users","firstname","lastname","userChangeEmail","newemail","userAddToCart","item","cart","model","userRemoveFromCart","position","splice","userPurchaseSuccess","orderId"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport * as actions from './index';\r\nimport { getAuthHeader, removeTokenCookie, getTokenCookie } from \"utils/tools\";\r\n\r\naxios.defaults.headers.post['Content-Type'] = 'application-json';\r\n\r\nexport const userRegister = (values) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const user = await axios.post(`/api/auth/register`, {\r\n                email: values.email,\r\n                password: values.password\r\n            });\r\n            dispatch(actions.userAuthenticate({\r\n                data: user.data.user,\r\n                auth: true\r\n            }))\r\n            dispatch(actions.successGlobal('Welcome! Check your mail to verify your account.'));\r\n        }catch(error) {\r\n            dispatch(actions.errorGlobal(error.response.data.message));\r\n        }\r\n    }\r\n}\r\n\r\nexport const userSignIn = (values) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const user = await axios.post(`/api/auth/signin`, {\r\n                email: values.email,\r\n                password: values.password\r\n            });\r\n            dispatch(actions.userAuthenticate({\r\n                data: user.data.user,\r\n                auth: true\r\n            }))\r\n            dispatch(actions.successGlobal('Welcome!'));\r\n        }catch(error) {\r\n            dispatch(actions.errorGlobal(error.response.data.message));\r\n        }\r\n    }\r\n}\r\n\r\nexport const userIsAuth = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n            if(!getTokenCookie()) {\r\n                throw new Error();\r\n            }\r\n            const user = await axios.get('/api/auth/isauth', getAuthHeader());\r\n\r\n            dispatch(actions.userAuthenticate({data: user.data, auth: true}));\r\n        } catch(error) {\r\n            dispatch(actions.userAuthenticate({data: {}, auth: false}));\r\n        }\r\n    }\r\n}\r\n\r\nexport const userSignOut = () => {\r\n    return async(dispatch) => {\r\n        removeTokenCookie();\r\n        dispatch(actions.userSignOut());\r\n        dispatch(actions.successGlobal('Coodbye!'))\r\n    }\r\n}\r\n\r\nexport const userUpdateProfile = (data) => {\r\n    return async(dispatch, getState) => {\r\n        try {\r\n            const profile = await axios.patch('/api/users/profile', {\r\n                data: data\r\n            }, getAuthHeader());\r\n            \r\n            const userdata = {\r\n                ...getState().users.data,\r\n                firstname: profile.data.firstname,\r\n                lastname: profile.data.lastname\r\n            };\r\n\r\n            dispatch(actions.userUpdateProfile(userdata));\r\n            dispatch(actions.successGlobal('Profile updated!'));\r\n\r\n        } catch (error) {\r\n            dispatch(actions.errorGlobal(error.response.data.message));\r\n        }\r\n    }\r\n}\r\n\r\nexport const userChangeEmail = (data) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            await axios.patch(`/api/users/email`, {\r\n                email: data.email,\r\n                newemail: data.newemail\r\n            }, getAuthHeader());\r\n\r\n            dispatch(actions.userChangeEmail(data.newemail));\r\n            dispatch(actions.successGlobal('Email updated! Remember to verify your new email.'));\r\n        } catch(error) {\r\n            dispatch(actions.errorGlobal(error.response.data.message));\r\n        }\r\n    }\r\n}\r\n\r\nexport const userAddToCart = (item) => {\r\n    return async(dispatch, getState) => {\r\n        try {\r\n            const cart = getState().users.cart;\r\n\r\n            dispatch(actions.userAddToCart([\r\n                ...cart,\r\n                item\r\n            ]));\r\n            dispatch(actions.successGlobal(`${item.model} was added to cart.`));\r\n        } catch(error) {\r\n            dispatch(actions.errorGlobal(error.response.data.message));\r\n        }\r\n    }\r\n}\r\n\r\nexport const userRemoveFromCart = (position) => {\r\n    return async(dispatch, getState) => {\r\n        try {\r\n            const cart = getState().users.cart;\r\n            cart.splice(position, 1);\r\n\r\n            dispatch(actions.userAddToCart(cart));\r\n        } catch(error) {\r\n            dispatch(actions.errorGlobal(error.response.data.message));\r\n        }\r\n    }\r\n}\r\n\r\nexport const userPurchaseSuccess = (orderId) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const user = await axios.post(`/api/transaction/`, {\r\n                orderId: orderId\r\n            }, getAuthHeader());\r\n\r\n            dispatch(actions.successGlobal('Thank you for your purchase.'));\r\n            dispatch(actions.userPurchaseSuccess(user.data));\r\n        } catch(error) {\r\n            dispatch(actions.errorGlobal(error.response.data.message));\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}