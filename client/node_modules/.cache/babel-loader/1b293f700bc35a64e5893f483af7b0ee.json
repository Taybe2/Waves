{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\dashboard\\\\admin\\\\products\\\\addedit\\\\edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from 'react';\nimport PicUpload from './upload';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DashboardLayout from 'components/hoc/dashboardLayout';\nimport { getAllBrands } from 'store/actions/brand.actions';\nimport { addProduct, getProductById } from 'store/actions/product.actions';\nimport PicViewer from './picViewer'; //import { clearProductAdded } from 'store/actions';\n\nimport { useFormik } from 'formik';\nimport { errorHelper } from 'utils/tools';\nimport Loader from 'utils/loader';\nimport { TextField, Button, Divider, InputLabel, Select, MenuItem, FormControl, FormHelperText } from '@mui/material';\nimport { validation } from './formValues';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditProduct = props => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const notifications = useSelector(state => state.notifications);\n  const brands = useSelector(state => state.brands);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      model: '',\n      brand: '',\n      frets: '',\n      woodtype: '',\n      description: '',\n      price: '',\n      available: '',\n      shipping: false,\n      images: []\n    },\n    validationSchema: validation,\n    onSubmit: values => {\n      handleSubmit(values);\n    }\n  });\n\n  const handleSubmit = values => {\n    setLoading(true);\n    dispatch(addProduct(values));\n  };\n\n  const handlePicValue = pic => {\n    const picArray = formik.values.images;\n    picArray.push(pic.url);\n    formik.setFieldValue('images', picArray);\n  };\n\n  console.log(formik.values);\n\n  const deletePic = index => {\n    const picArray = formik.values.images;\n    picArray.splice(index, 1);\n    formik.setFieldValue('images', picArray);\n  };\n\n  useEffect(() => {\n    if (notifications && notifications.success) {\n      navigate('/dashboard/admin/admin_products');\n    }\n\n    if (notifications && notifications.error) {\n      setLoading(false);\n    }\n  }, [notifications, navigate]);\n  useEffect(() => {\n    const param = props.match.params.id;\n    dispatch(getAllBrands());\n\n    if (param) {\n      dispatch(getProductById(param));\n    }\n  }, [dispatch, props.match.params.id]); // useEffect(() => {\n  //     return() => {\n  //         dispatch(clearProductAdded())\n  //     }\n  // }, [dispatch])\n\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    title: \"Add Product\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PicViewer, {\n        formik: formik,\n        deletePic: index => deletePic(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PicUpload, {\n        picValue: pic => handlePicValue(pic)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"mt-3 article_form\",\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: '100%'\n            },\n            name: \"model\",\n            label: \"Enter a model\",\n            variant: \"outlined\",\n            ...formik.getFieldProps('model'),\n            ...errorHelper(formik, 'model')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: '100%'\n            },\n            name: \"frets\",\n            label: \"Amount of frets\",\n            variant: \"outlined\",\n            ...formik.getFieldProps('frets'),\n            ...errorHelper(formik, 'frets')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: '100%'\n            },\n            name: \"woodtype\",\n            label: \"Enter wood type\",\n            variant: \"outlined\",\n            ...formik.getFieldProps('woodtype'),\n            ...errorHelper(formik, 'woodtype')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"brand-select-label\",\n              children: \"Select a brand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"brand-select-label\",\n              name: \"brand\",\n              label: \"Select a brand\",\n              ...formik.getFieldProps('brand'),\n              error: formik.errors.brand && formik.touched.brand ? true : false,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this), brands && brands.all ? brands.all.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item._id,\n                children: item.name\n              }, item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 45\n              }, this)) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this), formik.errors.brand && formik.touched.brand ? /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              children: formik.errors.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 37\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: '100%'\n            },\n            name: \"description\",\n            label: \"Enter description\",\n            variant: \"outlined\",\n            multiline: true,\n            rows: 4,\n            ...formik.getFieldProps('description'),\n            ...errorHelper(formik, 'description')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: '100%'\n            },\n            name: \"price\",\n            label: \"Enter price\",\n            variant: \"outlined\",\n            ...formik.getFieldProps('price'),\n            ...errorHelper(formik, 'price')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: '100%'\n            },\n            name: \"available\",\n            label: \"Enter avilable guitars\",\n            variant: \"outlined\",\n            ...formik.getFieldProps('available'),\n            ...errorHelper(formik, 'available')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: \"mt-3 mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"shipping-select-label\",\n              children: \"Free shipping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"shipping-select-label\",\n              label: \"Free shipping\",\n              name: \"shipping\",\n              ...formik.getFieldProps('shipping'),\n              error: formik.errors.shipping && formik.touched.shipping ? true : false,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: true,\n                children: \"Yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: false,\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, this), formik.errors.shipping && formik.touched.shipping ? /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              children: formik.error.shipping\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 37\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            className: \"mt-3 mb-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Add Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditProduct, \"CV0564ZGrDDRffg2qjPaJ6RI3qc=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useNavigate, useFormik];\n});\n\n_c = EditProduct;\nexport default EditProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProduct\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/dashboard/admin/products/addedit/edit.js"],"names":["React","useEffect","useReducer","useState","PicUpload","useDispatch","useSelector","DashboardLayout","getAllBrands","addProduct","getProductById","PicViewer","useFormik","errorHelper","Loader","TextField","Button","Divider","InputLabel","Select","MenuItem","FormControl","FormHelperText","validation","useNavigate","EditProduct","props","loading","setLoading","notifications","state","brands","dispatch","navigate","formik","initialValues","model","brand","frets","woodtype","description","price","available","shipping","images","validationSchema","onSubmit","values","handleSubmit","handlePicValue","pic","picArray","push","url","setFieldValue","console","log","deletePic","index","splice","success","error","param","match","params","id","width","getFieldProps","errors","touched","all","map","item","_id","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState } from 'react';\r\nimport PicUpload from './upload';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DashboardLayout from 'components/hoc/dashboardLayout';\r\nimport { getAllBrands } from 'store/actions/brand.actions';\r\nimport { addProduct, getProductById } from 'store/actions/product.actions';\r\nimport PicViewer from './picViewer';\r\n//import { clearProductAdded } from 'store/actions';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { errorHelper } from 'utils/tools';\r\nimport Loader from 'utils/loader';\r\nimport { \r\n    TextField,\r\n    Button,\r\n    Divider,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    FormHelperText\r\n} from '@mui/material';\r\n\r\nimport { validation } from './formValues';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst EditProduct = (props) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const notifications = useSelector(state => state.notifications);\r\n    const brands = useSelector(state => state.brands);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            model: '',\r\n            brand: '',\r\n            frets: '',\r\n            woodtype: '',\r\n            description: '',\r\n            price: '',\r\n            available: '',\r\n            shipping: false,\r\n            images: []\r\n        },\r\n        validationSchema: validation,\r\n        onSubmit: (values) => {\r\n            handleSubmit(values);\r\n        }\r\n    });\r\n\r\n    const handleSubmit = (values) => {\r\n        setLoading(true);\r\n        dispatch(addProduct(values));\r\n    }\r\n\r\n    const handlePicValue = (pic) => {\r\n        const picArray = formik.values.images;\r\n        picArray.push(pic.url);\r\n        formik.setFieldValue('images', picArray);\r\n    }\r\n    console.log(formik.values)\r\n\r\n    const deletePic = (index) => {\r\n        const picArray = formik.values.images;\r\n        picArray.splice(index, 1);\r\n        formik.setFieldValue('images', picArray);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(notifications && notifications.success) {\r\n            navigate('/dashboard/admin/admin_products');\r\n        }\r\n        if(notifications && notifications.error) {\r\n            setLoading(false);\r\n        }\r\n    }, [notifications, navigate])\r\n\r\n    useEffect(() => {\r\n        const param = props.match.params.id;\r\n        dispatch(getAllBrands());\r\n        if(param) {\r\n            dispatch(getProductById(param));\r\n        }\r\n    }, [dispatch, props.match.params.id])\r\n\r\n    // useEffect(() => {\r\n    //     return() => {\r\n    //         dispatch(clearProductAdded())\r\n    //     }\r\n    // }, [dispatch])\r\n\r\n    return (\r\n        <DashboardLayout title=\"Add Product\">\r\n            { loading ?\r\n                <Loader />\r\n                :\r\n                <>\r\n                    <PicViewer \r\n                        formik={formik}\r\n                        deletePic={(index) => deletePic(index)}\r\n                    />\r\n                    <PicUpload \r\n                        picValue={(pic) => handlePicValue(pic)}\r\n                    />\r\n                    <form className='mt-3 article_form' onSubmit={formik.handleSubmit}>\r\n                        <div className='form-group'>\r\n                            <TextField\r\n                                style={{width: '100%'}}\r\n                                name='model'\r\n                                label='Enter a model'\r\n                                variant='outlined'\r\n                                {...formik.getFieldProps('model')}\r\n                                {...errorHelper(formik, 'model')}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <TextField\r\n                                style={{width: '100%'}}\r\n                                name='frets'\r\n                                label='Amount of frets'\r\n                                variant='outlined'\r\n                                {...formik.getFieldProps('frets')}\r\n                                {...errorHelper(formik, 'frets')}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <TextField\r\n                                style={{width: '100%'}}\r\n                                name='woodtype'\r\n                                label='Enter wood type'\r\n                                variant='outlined'\r\n                                {...formik.getFieldProps('woodtype')}\r\n                                {...errorHelper(formik, 'woodtype')}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <FormControl>\r\n                                <InputLabel id=\"brand-select-label\">Select a brand</InputLabel>\r\n                                <Select\r\n                                    labelId='brand-select-label'\r\n                                    name='brand'\r\n                                    label='Select a brand'\r\n                                    {...formik.getFieldProps('brand')}\r\n                                    error={ formik.errors.brand && formik.touched.brand ?\r\n                                    true : false }\r\n                                >\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    {brands && brands.all ?\r\n                                        brands.all.map((item) => (\r\n                                            <MenuItem key={item._id} value={item._id}>\r\n                                                {item.name}\r\n                                            </MenuItem>\r\n                                        ))\r\n                                        : null\r\n                                    }\r\n                                </Select>\r\n                                { formik.errors.brand && formik.touched.brand ?\r\n                                    <FormHelperText error={true}>\r\n                                        {formik.errors.brand}\r\n                                    </FormHelperText>\r\n                                    : null\r\n                                }\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <TextField\r\n                                style={{width: '100%'}}\r\n                                name='description'\r\n                                label='Enter description'\r\n                                variant='outlined'\r\n                                multiline\r\n                                rows={4}\r\n                                {...formik.getFieldProps('description')}\r\n                                {...errorHelper(formik, 'description')}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <TextField\r\n                                style={{width: '100%'}}\r\n                                name='price'\r\n                                label='Enter price'\r\n                                variant='outlined'\r\n                                {...formik.getFieldProps('price')}\r\n                                {...errorHelper(formik, 'price')}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <TextField\r\n                                style={{width: '100%'}}\r\n                                name='available'\r\n                                label='Enter avilable guitars'\r\n                                variant='outlined'\r\n                                {...formik.getFieldProps('available')}\r\n                                {...errorHelper(formik, 'available')}\r\n                            />\r\n                        </div>\r\n                        <Divider className='mt-3 mb-3' />\r\n                        <div className='form-group'>\r\n                            <FormControl variant=\"outlined\">\r\n                                <InputLabel id=\"shipping-select-label\">Free shipping</InputLabel>\r\n                                <Select\r\n                                    labelId='shipping-select-label'\r\n                                    label='Free shipping'\r\n                                    name='shipping'\r\n                                    {...formik.getFieldProps('shipping')}\r\n                                    error={ formik.errors.shipping && formik.touched.shipping ?\r\n                                    true : false }\r\n                                >\r\n                                    <MenuItem value={true}>Yes</MenuItem>\r\n                                    <MenuItem value={false}>No</MenuItem>\r\n                                </Select>\r\n                                { formik.errors.shipping && formik.touched.shipping ?\r\n                                    <FormHelperText error={true}>\r\n                                        {formik.error.shipping}\r\n                                    </FormHelperText>\r\n                                    : null\r\n                                }\r\n                            </FormControl>\r\n                            <Divider className='mt-3 mb-3' />\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                type='submit'\r\n                            >\r\n                                Add Product\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </>\r\n\r\n            }\r\n        </DashboardLayout>\r\n    )\r\n};\r\n\r\nexport default EditProduct;"]},"metadata":{},"sourceType":"module"}