{"ast":null,"code":"import { GET_PROD_BY_SOLD, GET_PROD_BY_DATE, GET_PROD_PAGINATE, REMOVE_PROD, ADD_PROD, CLEAR_PRODUCT_ADD, GET_PROD_BY_ID, CLEAR_CURRENT_PROD, SUCCESS_GLOBAL, ERROR_GLOBAL, CLEAR_NOTIFICATION, AUTH_USER, SIGN_OUT, UPDATE_USER_PROFILE, USER_CHANGE_EMAIL, GET_ALL_BRANDS } from '../types'; ///// USER\n\nexport const userAuthenticate = user => ({\n  type: AUTH_USER,\n  payload: user\n});\nexport const userSignOut = () => ({\n  type: SIGN_OUT\n});\nexport const userUpdateProfile = userdata => ({\n  type: UPDATE_USER_PROFILE,\n  payload: userdata\n});\nexport const userChangeEmail = data => ({\n  type: USER_CHANGE_EMAIL,\n  payload: data\n}); ///// PRODUCTS\n\nexport const productsBySold = data => ({\n  type: GET_PROD_BY_SOLD,\n  payload: data\n});\nexport const productsByDate = data => ({\n  type: GET_PROD_BY_DATE,\n  payload: data\n});\nexport const productsPaginate = products => ({\n  type: GET_PROD_PAGINATE,\n  payload: products\n});\nexport const removeProduct = id => ({\n  type: REMOVE_PROD\n});\nexport const addProduct = product => ({\n  type: ADD_PROD,\n  payload: product\n});\nexport const clearProductAdded = () => ({\n  type: CLEAR_PRODUCT_ADD\n});\nexport const productById = product => ({\n  type: GET_PROD_BY_ID,\n  payload: product\n});\nexport const clearCurrentProduct = () => ({\n  type: CLEAR_CURRENT_PROD\n}); ///// BRANDS\n\nexport const getAllBrands = brands => ({\n  type: GET_ALL_BRANDS,\n  payload: brands\n}); ///// NOTIFICATIONS\n\nexport const errorGlobal = msg => ({\n  type: ERROR_GLOBAL,\n  payload: msg\n});\nexport const successGlobal = msg => ({\n  type: SUCCESS_GLOBAL,\n  payload: msg\n});\nexport const clearNotification = () => {\n  return dispatch => {\n    dispatch({\n      type: CLEAR_NOTIFICATION\n    });\n  };\n};","map":{"version":3,"sources":["C:/React/waves/client/src/store/actions/index.js"],"names":["GET_PROD_BY_SOLD","GET_PROD_BY_DATE","GET_PROD_PAGINATE","REMOVE_PROD","ADD_PROD","CLEAR_PRODUCT_ADD","GET_PROD_BY_ID","CLEAR_CURRENT_PROD","SUCCESS_GLOBAL","ERROR_GLOBAL","CLEAR_NOTIFICATION","AUTH_USER","SIGN_OUT","UPDATE_USER_PROFILE","USER_CHANGE_EMAIL","GET_ALL_BRANDS","userAuthenticate","user","type","payload","userSignOut","userUpdateProfile","userdata","userChangeEmail","data","productsBySold","productsByDate","productsPaginate","products","removeProduct","id","addProduct","product","clearProductAdded","productById","clearCurrentProduct","getAllBrands","brands","errorGlobal","msg","successGlobal","clearNotification","dispatch"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,gBAFJ,EAGIC,iBAHJ,EAIIC,WAJJ,EAKIC,QALJ,EAMIC,iBANJ,EAOIC,cAPJ,EAQIC,kBARJ,EASIC,cATJ,EAUIC,YAVJ,EAWIC,kBAXJ,EAYIC,SAZJ,EAaIC,QAbJ,EAcIC,mBAdJ,EAeIC,iBAfJ,EAgBIC,cAhBJ,QAiBO,UAjBP,C,CAmBA;;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,IAAD,KAAW;AACnCC,EAAAA,IAAI,EAAEP,SAD6B;AAEnCQ,EAAAA,OAAO,EAAEF;AAF0B,CAAX,CAAzB;AAKP,OAAO,MAAMG,WAAW,GAAG,OAAO;AAC1BF,EAAAA,IAAI,EAAEN;AADoB,CAAP,CAApB;AAIP,OAAO,MAAMS,iBAAiB,GAAIC,QAAD,KAAe;AACxCJ,EAAAA,IAAI,EAAEL,mBADkC;AAExCM,EAAAA,OAAO,EAAEG;AAF+B,CAAf,CAA1B;AAKP,OAAO,MAAMC,eAAe,GAAIC,IAAD,KAAW;AAClCN,EAAAA,IAAI,EAAEJ,iBAD4B;AAElCK,EAAAA,OAAO,EAAEK;AAFyB,CAAX,CAAxB,C,CAKP;;AACA,OAAO,MAAMC,cAAc,GAAID,IAAD,KAAW;AACjCN,EAAAA,IAAI,EAAElB,gBAD2B;AAEjCmB,EAAAA,OAAO,EAAEK;AAFwB,CAAX,CAAvB;AAKP,OAAO,MAAME,cAAc,GAAIF,IAAD,KAAW;AACjCN,EAAAA,IAAI,EAAEjB,gBAD2B;AAEjCkB,EAAAA,OAAO,EAAEK;AAFwB,CAAX,CAAvB;AAKP,OAAO,MAAMG,gBAAgB,GAAIC,QAAD,KAAe;AACvCV,EAAAA,IAAI,EAAEhB,iBADiC;AAEvCiB,EAAAA,OAAO,EAAES;AAF8B,CAAf,CAAzB;AAKP,OAAO,MAAMC,aAAa,GAAIC,EAAD,KAAS;AAC9BZ,EAAAA,IAAI,EAAEf;AADwB,CAAT,CAAtB;AAIP,OAAO,MAAM4B,UAAU,GAAIC,OAAD,KAAc;AAChCd,EAAAA,IAAI,EAAEd,QAD0B;AAEhCe,EAAAA,OAAO,EAAEa;AAFuB,CAAd,CAAnB;AAKP,OAAO,MAAMC,iBAAiB,GAAG,OAAO;AACnCf,EAAAA,IAAI,EAAEb;AAD6B,CAAP,CAA1B;AAIP,OAAO,MAAM6B,WAAW,GAAIF,OAAD,KAAc;AACjCd,EAAAA,IAAI,EAAEZ,cAD2B;AAEjCa,EAAAA,OAAO,EAAEa;AAFwB,CAAd,CAApB;AAKP,OAAO,MAAMG,mBAAmB,GAAG,OAAO;AAClCjB,EAAAA,IAAI,EAAEX;AAD4B,CAAP,CAA5B,C,CAIP;;AACA,OAAO,MAAM6B,YAAY,GAAIC,MAAD,KAAa;AACjCnB,EAAAA,IAAI,EAAEH,cAD2B;AAEjCI,EAAAA,OAAO,EAAEkB;AAFwB,CAAb,CAArB,C,CAKP;;AACA,OAAO,MAAMC,WAAW,GAAIC,GAAD,KAAU;AAC7BrB,EAAAA,IAAI,EAAET,YADuB;AAE7BU,EAAAA,OAAO,EAAEoB;AAFoB,CAAV,CAApB;AAKP,OAAO,MAAMC,aAAa,GAAID,GAAD,KAAU;AAC/BrB,EAAAA,IAAI,EAAEV,cADyB;AAE/BW,EAAAA,OAAO,EAAEoB;AAFsB,CAAV,CAAtB;AAKP,OAAO,MAAME,iBAAiB,GAAG,MAAM;AAC/B,SAAQC,QAAD,IAAc;AACbA,IAAAA,QAAQ,CAAC;AACDxB,MAAAA,IAAI,EAAER;AADL,KAAD,CAAR;AAGP,GAJD;AAKP,CANM","sourcesContent":["import {\r\n    GET_PROD_BY_SOLD,\r\n    GET_PROD_BY_DATE,\r\n    GET_PROD_PAGINATE,\r\n    REMOVE_PROD,\r\n    ADD_PROD,\r\n    CLEAR_PRODUCT_ADD,\r\n    GET_PROD_BY_ID,\r\n    CLEAR_CURRENT_PROD,\r\n    SUCCESS_GLOBAL,\r\n    ERROR_GLOBAL,\r\n    CLEAR_NOTIFICATION,\r\n    AUTH_USER,\r\n    SIGN_OUT,\r\n    UPDATE_USER_PROFILE,\r\n    USER_CHANGE_EMAIL,\r\n    GET_ALL_BRANDS\r\n} from '../types';\r\n\r\n///// USER\r\n\r\nexport const userAuthenticate = (user) => ({\r\n        type: AUTH_USER,\r\n        payload: user\r\n})\r\n\r\nexport const userSignOut = () => ({\r\n        type: SIGN_OUT\r\n})\r\n\r\nexport const userUpdateProfile = (userdata) => ({\r\n        type: UPDATE_USER_PROFILE,\r\n        payload: userdata\r\n})\r\n\r\nexport const userChangeEmail = (data) => ({\r\n        type: USER_CHANGE_EMAIL,\r\n        payload: data\r\n})\r\n\r\n///// PRODUCTS\r\nexport const productsBySold = (data) => ({\r\n        type: GET_PROD_BY_SOLD,\r\n        payload: data\r\n})\r\n\r\nexport const productsByDate = (data) => ({\r\n        type: GET_PROD_BY_DATE,\r\n        payload: data\r\n})\r\n\r\nexport const productsPaginate = (products) => ({\r\n        type: GET_PROD_PAGINATE,\r\n        payload: products\r\n})\r\n\r\nexport const removeProduct = (id) => ({\r\n        type: REMOVE_PROD\r\n})\r\n\r\nexport const addProduct = (product) => ({\r\n        type: ADD_PROD,\r\n        payload: product\r\n})\r\n\r\nexport const clearProductAdded = () => ({\r\n     type: CLEAR_PRODUCT_ADD   \r\n})\r\n\r\nexport const productById = (product) => ({\r\n        type: GET_PROD_BY_ID,\r\n        payload: product\r\n})\r\n\r\nexport const clearCurrentProduct = () => ({\r\n        type: CLEAR_CURRENT_PROD\r\n})\r\n\r\n///// BRANDS\r\nexport const getAllBrands = (brands) => ({\r\n        type: GET_ALL_BRANDS,\r\n        payload: brands\r\n})\r\n\r\n///// NOTIFICATIONS\r\nexport const errorGlobal = (msg) => ({\r\n        type: ERROR_GLOBAL,\r\n        payload: msg\r\n})\r\n\r\nexport const successGlobal = (msg) => ({\r\n        type: SUCCESS_GLOBAL,\r\n        payload: msg\r\n})\r\n\r\nexport const clearNotification = () => {\r\n        return (dispatch) => {\r\n                dispatch({\r\n                        type: CLEAR_NOTIFICATION\r\n                })\r\n        }\r\n}"]},"metadata":{},"sourceType":"module"}