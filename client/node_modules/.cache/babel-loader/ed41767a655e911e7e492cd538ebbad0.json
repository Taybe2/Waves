{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\dashboard\\\\admin\\\\products\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport DashboardLayout from 'components/hoc/dashboardLayout';\nimport ProductsTable from './productsTable';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { errorHelper } from 'utils/tools';\nimport { TextField } from '@mui/material';\nimport { Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { productsPaginate, removeProduct } from 'store/actions/product.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultValues = {\n  keywords: '',\n  brand: [],\n  min: 0,\n  max: 5000,\n  frets: [],\n  page: 1\n};\n\nconst AdminProducts = props => {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n  const [toRemove, setToRemove] = useState(null);\n  const products = useSelector(state => state.products);\n  const notifications = useSelector(state => state.notifications);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      keywords: ''\n    },\n    validationSchema: Yup.object({\n      keywords: Yup.string().min(3, 'You need more than 3 characters').max(200, 'Your search is too long')\n    }),\n    onSubmit: (values, _ref) => {\n      let {\n        resetForm\n      } = _ref;\n      setSearchValues({\n        keywords: values.keywords,\n        page: 1\n      });\n      resetForm();\n    }\n  });\n  const [searchValues, setSearchValues] = useReducer((state, newState) => ({ ...state,\n    ...newState\n  }), defaultValues);\n\n  const goToEdit = id => {\n    navigate(`/dashboard/admin/edit_product/${id}`);\n  };\n\n  const goToPage = page => {\n    setSearchValues({\n      page: page\n    });\n  };\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  const handleOpen = id => {\n    setToRemove(id);\n    setShowModal(true);\n  };\n\n  const handleRemove = () => {\n    dispatch(removeProduct(toRemove));\n  };\n\n  const resetSearch = () => {\n    setSearchValues(defaultValues);\n  };\n\n  useEffect(() => {\n    dispatch(productsPaginate(searchValues));\n  }, [dispatch, searchValues]);\n  useEffect(() => {\n    handleClose();\n    setToRemove(null);\n\n    if (notifications && notifications.removed) {\n      dispatch(productsPaginate(searchValues));\n    }\n  }, [notifications, dispatch]);\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    title: \"Products\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products_table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"mt-3\",\n          onSubmit: formik.handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: '100%'\n            },\n            name: \"keywordds\",\n            label: \"Enter your search\",\n            variant: \"outlined\",\n            ...formik.getFieldProps('keywords'),\n            ...errorHelper(formik, 'keywords')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => resetSearch(),\n          children: \"Reset Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProductsTable, {\n        showModal: showModal,\n        prods: products.byPaginate,\n        prevPage: page => goToPage(page),\n        nextPage: page => goToPage(page),\n        editProd: id => goToEdit(id),\n        closeModal: () => handleClose(),\n        openModal: id => handleOpen(id),\n        removeProd: () => handleRemove()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminProducts, \"SfpMklp+sPXyoEwNqwBeRBmeTJU=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useNavigate, useFormik];\n});\n\n_c = AdminProducts;\nexport default AdminProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminProducts\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/dashboard/admin/products/index.js"],"names":["React","useEffect","useReducer","useState","useNavigate","DashboardLayout","ProductsTable","useFormik","Yup","errorHelper","TextField","Button","useDispatch","useSelector","productsPaginate","removeProduct","defaultValues","keywords","brand","min","max","frets","page","AdminProducts","props","showModal","setShowModal","toRemove","setToRemove","products","state","notifications","dispatch","navigate","formik","initialValues","validationSchema","object","string","onSubmit","values","resetForm","setSearchValues","searchValues","newState","goToEdit","id","goToPage","handleClose","handleOpen","handleRemove","resetSearch","removed","handleSubmit","width","getFieldProps","byPaginate"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DashboardLayout from 'components/hoc/dashboardLayout';\r\nimport ProductsTable from './productsTable';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { errorHelper } from 'utils/tools';\r\nimport { TextField } from '@mui/material';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { productsPaginate, removeProduct } from 'store/actions/product.actions';\r\n\r\nconst defaultValues = { keywords: '', brand: [], min: 0, max: 5000, frets: [], page: 1 };\r\n\r\nconst AdminProducts = (props) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [toRemove, setToRemove] = useState(null);\r\n\r\n    const products = useSelector(state => state.products);\r\n    const notifications = useSelector(state => state.notifications);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const formik = useFormik({\r\n        initialValues: { keywords: '' },\r\n        validationSchema: Yup.object({\r\n            keywords: Yup.string()\r\n                .min(3, 'You need more than 3 characters')\r\n                .max(200, 'Your search is too long')\r\n        }),\r\n        onSubmit: (values, { resetForm }) => {\r\n            setSearchValues({ keywords: values.keywords, page: 1});\r\n            resetForm();\r\n        }\r\n    })\r\n\r\n    const [searchValues, setSearchValues] = useReducer(\r\n        (state, newState) => ({ ...state, ...newState }),\r\n        defaultValues \r\n    )\r\n    \r\n    const goToEdit = (id) => {\r\n        navigate(`/dashboard/admin/edit_product/${id}`);\r\n    }\r\n\r\n    const goToPage = (page) => {\r\n        setSearchValues({ page: page });\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShowModal(false);\r\n    }\r\n\r\n    const handleOpen = (id) => {\r\n        setToRemove(id);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const handleRemove = () => {\r\n        dispatch(removeProduct(toRemove));\r\n    }\r\n\r\n    const resetSearch = () => {\r\n        setSearchValues(defaultValues)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(productsPaginate(searchValues));\r\n    }, [dispatch, searchValues]);\r\n\r\n    useEffect(() => {\r\n        handleClose();\r\n        setToRemove(null);\r\n\r\n        if(notifications && notifications.removed) {\r\n            dispatch(productsPaginate(searchValues));\r\n        }\r\n\r\n    }, [notifications, dispatch])\r\n\r\n    return(\r\n        <DashboardLayout title=\"Products\">\r\n            <div className='products_table'>\r\n                <div>\r\n                    <form className='mt-3' onSubmit={formik.handleSubmit}>\r\n                        <TextField\r\n                            style={{width: '100%'}}\r\n                            name='keywordds'\r\n                            label='Enter your search'\r\n                            variant='outlined'\r\n                            {...formik.getFieldProps('keywords')}\r\n                            {...errorHelper(formik, 'keywords')}\r\n                        />\r\n                    </form>\r\n                    <Button onClick={() => resetSearch()}>Reset Search</Button>\r\n                </div>\r\n                <hr />\r\n                <ProductsTable\r\n                    showModal={showModal}\r\n                    prods={products.byPaginate}\r\n                    prevPage={(page) => goToPage(page)}\r\n                    nextPage={(page) => goToPage(page)}\r\n                    editProd={(id) => goToEdit(id)}\r\n                    closeModal={() => handleClose()}\r\n                    openModal={(id) => handleOpen(id)}\r\n                    removeProd={() => handleRemove()}\r\n                />\r\n            </div>\r\n        </DashboardLayout>\r\n    )\r\n}\r\n\r\nexport default AdminProducts;"]},"metadata":{},"sourceType":"module"}