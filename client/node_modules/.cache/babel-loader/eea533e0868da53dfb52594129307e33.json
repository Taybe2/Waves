{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\dashboard\\\\user\\\\info.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport DashboardLayout from 'components/hoc/dashboardLayout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { errorHelper } from 'utils/tools';\nimport { useDispatch } from 'react-redux';\nimport { min } from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserInfo = _ref => {\n  _s();\n\n  let {\n    users\n  } = _ref;\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      firstname: users.data.firstname,\n      lastname: users.data.lastname\n    },\n    validationSchema: Yup.object({\n      firstname: Yup.string().min(3, '3 char min').max(30, '30 char  max').required('Sorry, you need the firstname'),\n      lastname: Yup.string().min(3, '3 char min').max(30, '30 char  max').required('Sorry, you need the firstname')\n    }),\n    onSubmit: values => {\n      console.log(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    title: \"User Information\",\n    children: \"content\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserInfo, \"snIeeAJX6ddd+yTscBhJ9TqRTSM=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = UserInfo;\nexport default UserInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/dashboard/user/info.js"],"names":["React","DashboardLayout","useFormik","Yup","errorHelper","useDispatch","min","UserInfo","users","dispatch","formik","enableReinitialize","initialValues","firstname","data","lastname","validationSchema","object","string","max","required","onSubmit","values","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,GAAT,QAAoB,QAApB;;;AAEA,MAAMC,QAAQ,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC5B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAMK,MAAM,GAAGR,SAAS,CAAE;AACtBS,IAAAA,kBAAkB,EAAE,IADE;AAEtBC,IAAAA,aAAa,EAAE;AACXC,MAAAA,SAAS,EAAEL,KAAK,CAACM,IAAN,CAAWD,SADX;AAEXE,MAAAA,QAAQ,EAAEP,KAAK,CAACM,IAAN,CAAWC;AAFV,KAFO;AAMtBC,IAAAA,gBAAgB,EAAEb,GAAG,CAACc,MAAJ,CAAW;AACzBJ,MAAAA,SAAS,EAAEV,GAAG,CAACe,MAAJ,GACNZ,GADM,CACF,CADE,EACC,YADD,EAENa,GAFM,CAEF,EAFE,EAEE,cAFF,EAGNC,QAHM,CAGG,+BAHH,CADc;AAKzBL,MAAAA,QAAQ,EAAEZ,GAAG,CAACe,MAAJ,GACLZ,GADK,CACD,CADC,EACE,YADF,EAELa,GAFK,CAED,EAFC,EAEG,cAFH,EAGLC,QAHK,CAGI,+BAHJ;AALe,KAAX,CANI;AAgBtBC,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH;AAlBqB,GAAF,CAAxB;AAqBA,sBACI,QAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA7BD;;GAAMf,Q;UACeF,W,EAEFH,S;;;KAHbK,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport DashboardLayout from 'components/hoc/dashboardLayout';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { errorHelper } from 'utils/tools';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { min } from 'moment';\r\n\r\nconst UserInfo = ({ users }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik ({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            firstname: users.data.firstname,\r\n            lastname: users.data.lastname\r\n        },\r\n        validationSchema: Yup.object({\r\n            firstname: Yup.string()\r\n                .min(3, '3 char min')\r\n                .max(30, '30 char  max')\r\n                .required('Sorry, you need the firstname'),\r\n            lastname: Yup.string()\r\n                .min(3, '3 char min')\r\n                .max(30, '30 char  max')\r\n                .required('Sorry, you need the firstname')\r\n        }),\r\n        onSubmit: (values) => {\r\n            console.log(values);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <DashboardLayout title=\"User Information\">\r\n            content\r\n        </DashboardLayout>\r\n    );\r\n};\r\n\r\nexport default UserInfo;"]},"metadata":{},"sourceType":"module"}