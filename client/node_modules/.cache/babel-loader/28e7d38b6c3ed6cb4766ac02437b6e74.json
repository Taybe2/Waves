{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\hoc\\\\authGuardNew.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLocation, Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthGuard = _ref => {\n  _s();\n\n  let {\n    users,\n    children\n  } = _ref;\n  const [isAuth, setIsAuth] = useState(false); //const users = useSelector(state => state.users);\n\n  const location = useLocation();\n  console.log(props);\n  return users.isAuth === true ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/signin\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AuthGuard, \"gCi3KfCz8BOKo0+QVg1rRoyDmxU=\", false, function () {\n  return [useLocation];\n});\n\n_c = AuthGuard;\nexport default AuthGuard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/hoc/authGuardNew.js"],"names":["React","useState","useSelector","useLocation","Navigate","AuthGuard","users","children","isAuth","setIsAuth","location","console","log","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,kBAAtC;;;AAEA,MAAMC,SAAS,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAwB;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC,CADuC,CAEvC;;AACA,QAAMS,QAAQ,GAAGP,WAAW,EAA5B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AAEA,SAAOP,KAAK,CAACE,MAAN,KAAiB,IAAjB,GACLD,QADK,gBAGL,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC,SAAb;AAAuB,IAAA,OAAO;AAA9B;AAAA;AAAA;AAAA;AAAA,UAHF;AAKH,CAXD;;GAAMF,S;UAGeF,W;;;KAHfE,S;AAaN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useLocation, Navigate } from 'react-router-dom';\r\n\r\nconst AuthGuard = ({ users, children }) => {\r\n    const [isAuth, setIsAuth] = useState(false);\r\n    //const users = useSelector(state => state.users);\r\n    const location = useLocation();\r\n    console.log(props);\r\n  \r\n    return users.isAuth === true ? (\r\n      children\r\n    ) : (\r\n      <Navigate to=\"/signin\" replace />\r\n    );\r\n};\r\n\r\nexport default AuthGuard;"]},"metadata":{},"sourceType":"module"}