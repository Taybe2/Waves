{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\dashboard\\\\admin\\\\products\\\\addedit\\\\edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from 'react';\nimport PicUpload from './upload';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DashboardLayout from 'components/hoc/dashboardLayout';\nimport { getAllBrands } from 'store/actions/brand.actions';\nimport { editProduct, getProductById } from 'store/actions/product.actions';\nimport PicViewer from './picViewer';\nimport { clearCurrentProduct } from 'store/actions';\nimport { useFormik } from 'formik';\nimport { errorHelper } from 'utils/tools';\nimport Loader from 'utils/loader';\nimport { TextField, Button, Divider, InputLabel, Select, MenuItem, FormControl, FormHelperText } from '@mui/material';\nimport { validation, formValues, getValuesToEdit } from './formValues';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditProduct = props => {\n  _s();\n\n  const [values, setValues] = useState(formValues);\n  const [loading, setLoading] = useState(false);\n  const products = useSelector(state => state.products);\n  const notifications = useSelector(state => state.notifications);\n  const brands = useSelector(state => state.brands);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n  console.log(params);\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: values,\n    validationSchema: validation,\n    onSubmit: values => {\n      handleSubmit(values);\n    }\n  });\n\n  const handleSubmit = values => {\n    setLoading(true);\n    dispatch(editProduct(values, params.id));\n  };\n\n  const handlePicValue = pic => {\n    const picArray = formik.values.images;\n    picArray.push(pic.url);\n    formik.setFieldValue('images', picArray);\n  };\n\n  console.log(formik.values);\n\n  const deletePic = index => {\n    const picArray = formik.values.images;\n    picArray.splice(index, 1);\n    formik.setFieldValue('images', picArray);\n  };\n\n  useEffect(() => {\n    if (notifications) {\n      setLoading(false);\n    }\n  }, [notifications]);\n  useEffect(() => {\n    const productId = params.id;\n    dispatch(getAllBrands());\n\n    if (productId) {\n      dispatch(getProductById(productId));\n    }\n  }, [dispatch, params.id]);\n  useEffect(() => {\n    if (products && products.byId) {\n      setValues(getValuesToEdit(products.byId));\n    }\n  }, [products]);\n  useEffect(() => {\n    return () => {\n      dispatch(clearCurrentProduct());\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    title: products.byId ? `Edit product` : \"Add Product\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PicViewer, {\n        formik: formik,\n        deletePic: index => deletePic(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PicUpload, {\n        picValue: pic => handlePicValue(pic)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"mt-3 article_form\",\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: '100%'\n            },\n            name: \"model\",\n            label: \"Enter a model\",\n            variant: \"outlined\",\n            ...formik.getFieldProps('model'),\n            ...errorHelper(formik, 'model')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: '100%'\n            },\n            name: \"frets\",\n            label: \"Amount of frets\",\n            variant: \"outlined\",\n            ...formik.getFieldProps('frets'),\n            ...errorHelper(formik, 'frets')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: '100%'\n            },\n            name: \"woodtype\",\n            label: \"Enter wood type\",\n            variant: \"outlined\",\n            ...formik.getFieldProps('woodtype'),\n            ...errorHelper(formik, 'woodtype')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"brand-select-label\",\n              children: \"Select a brand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"brand-select-label\",\n              name: \"brand\",\n              label: \"Select a brand\",\n              ...formik.getFieldProps('brand'),\n              error: formik.errors.brand && formik.touched.brand ? true : false,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this), brands && brands.all ? brands.all.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item._id,\n                children: item.name\n              }, item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 45\n              }, this)) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this), formik.errors.brand && formik.touched.brand ? /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              children: formik.errors.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 37\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: '100%'\n            },\n            name: \"description\",\n            label: \"Enter description\",\n            variant: \"outlined\",\n            multiline: true,\n            rows: 4,\n            ...formik.getFieldProps('description'),\n            ...errorHelper(formik, 'description')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: '100%'\n            },\n            name: \"price\",\n            label: \"Enter price\",\n            variant: \"outlined\",\n            ...formik.getFieldProps('price'),\n            ...errorHelper(formik, 'price')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: '100%'\n            },\n            name: \"available\",\n            label: \"Enter avilable guitars\",\n            variant: \"outlined\",\n            ...formik.getFieldProps('available'),\n            ...errorHelper(formik, 'available')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: \"mt-3 mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"shipping-select-label\",\n              children: \"Free shipping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"shipping-select-label\",\n              label: \"Free shipping\",\n              name: \"shipping\",\n              ...formik.getFieldProps('shipping'),\n              error: formik.errors.shipping && formik.touched.shipping ? true : false,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: true,\n                children: \"Yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: false,\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this), formik.errors.shipping && formik.touched.shipping ? /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              children: formik.error.shipping\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 37\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            className: \"mt-3 mb-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            type: \"submit\",\n            children: products.byId ? 'Edit Product' : 'Add Product'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditProduct, \"xab7mPWcYmfq1Quy/9bHDURJkKw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useNavigate, useParams, useFormik];\n});\n\n_c = EditProduct;\nexport default EditProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProduct\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/dashboard/admin/products/addedit/edit.js"],"names":["React","useEffect","useReducer","useState","PicUpload","useDispatch","useSelector","DashboardLayout","getAllBrands","editProduct","getProductById","PicViewer","clearCurrentProduct","useFormik","errorHelper","Loader","TextField","Button","Divider","InputLabel","Select","MenuItem","FormControl","FormHelperText","validation","formValues","getValuesToEdit","useNavigate","useParams","EditProduct","props","values","setValues","loading","setLoading","products","state","notifications","brands","dispatch","navigate","params","console","log","formik","enableReinitialize","initialValues","validationSchema","onSubmit","handleSubmit","id","handlePicValue","pic","picArray","images","push","url","setFieldValue","deletePic","index","splice","productId","byId","width","getFieldProps","errors","brand","touched","all","map","item","_id","name","shipping","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState } from 'react';\r\nimport PicUpload from './upload';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DashboardLayout from 'components/hoc/dashboardLayout';\r\nimport { getAllBrands } from 'store/actions/brand.actions';\r\nimport { editProduct, getProductById } from 'store/actions/product.actions';\r\nimport PicViewer from './picViewer';\r\nimport { clearCurrentProduct } from 'store/actions';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { errorHelper } from 'utils/tools';\r\nimport Loader from 'utils/loader';\r\nimport { \r\n    TextField,\r\n    Button,\r\n    Divider,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    FormHelperText\r\n} from '@mui/material';\r\n\r\nimport { validation, formValues, getValuesToEdit } from './formValues';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst EditProduct = (props) => {\r\n    const [values, setValues] = useState(formValues);\r\n    const [loading, setLoading] = useState(false);\r\n    const products = useSelector(state => state.products);\r\n    const notifications = useSelector(state => state.notifications);\r\n    const brands = useSelector(state => state.brands);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const params = useParams();\r\n\r\n    console.log(params);\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: values,\r\n        validationSchema: validation,\r\n        onSubmit: (values) => {\r\n            handleSubmit(values);\r\n        }\r\n    });\r\n\r\n    const handleSubmit = (values) => {\r\n        setLoading(true);\r\n        dispatch(editProduct(values, params.id));\r\n    }\r\n\r\n    const handlePicValue = (pic) => {\r\n        const picArray = formik.values.images;\r\n        picArray.push(pic.url);\r\n        formik.setFieldValue('images', picArray);\r\n    }\r\n    console.log(formik.values)\r\n\r\n    const deletePic = (index) => {\r\n        const picArray = formik.values.images;\r\n        picArray.splice(index, 1);\r\n        formik.setFieldValue('images', picArray);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(notifications) {\r\n            setLoading(false);\r\n        }\r\n    }, [notifications])\r\n\r\n    useEffect(() => {\r\n        \r\n        const productId = params.id;\r\n        dispatch(getAllBrands());\r\n        if(productId) {\r\n            dispatch(getProductById(productId));\r\n        }\r\n    }, [dispatch, params.id])\r\n\r\n    useEffect(() => {\r\n        if(products && products.byId) {\r\n            setValues(getValuesToEdit(products.byId))\r\n        }\r\n    }, [products])\r\n    \r\n    useEffect(() => {\r\n        return() => {\r\n            dispatch(clearCurrentProduct())\r\n        }\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <DashboardLayout title={products.byId ? `Edit product` : \"Add Product\"}>\r\n            { loading ?\r\n                <Loader />\r\n                :\r\n                <>\r\n                    <PicViewer \r\n                        formik={formik}\r\n                        deletePic={(index) => deletePic(index)}\r\n                    />\r\n                    <PicUpload \r\n                        picValue={(pic) => handlePicValue(pic)}\r\n                    />\r\n                    <form className='mt-3 article_form' onSubmit={formik.handleSubmit}>\r\n                        <div className='form-group'>\r\n                            <TextField\r\n                                style={{width: '100%'}}\r\n                                name='model'\r\n                                label='Enter a model'\r\n                                variant='outlined'\r\n                                {...formik.getFieldProps('model')}\r\n                                {...errorHelper(formik, 'model')}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <TextField\r\n                                style={{width: '100%'}}\r\n                                name='frets'\r\n                                label='Amount of frets'\r\n                                variant='outlined'\r\n                                {...formik.getFieldProps('frets')}\r\n                                {...errorHelper(formik, 'frets')}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <TextField\r\n                                style={{width: '100%'}}\r\n                                name='woodtype'\r\n                                label='Enter wood type'\r\n                                variant='outlined'\r\n                                {...formik.getFieldProps('woodtype')}\r\n                                {...errorHelper(formik, 'woodtype')}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <FormControl>\r\n                                <InputLabel id=\"brand-select-label\">Select a brand</InputLabel>\r\n                                <Select\r\n                                    labelId='brand-select-label'\r\n                                    name='brand'\r\n                                    label='Select a brand'\r\n                                    {...formik.getFieldProps('brand')}\r\n                                    error={ formik.errors.brand && formik.touched.brand ?\r\n                                    true : false }\r\n                                >\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    {brands && brands.all ?\r\n                                        brands.all.map((item) => (\r\n                                            <MenuItem key={item._id} value={item._id}>\r\n                                                {item.name}\r\n                                            </MenuItem>\r\n                                        ))\r\n                                        : null\r\n                                    }\r\n                                </Select>\r\n                                { formik.errors.brand && formik.touched.brand ?\r\n                                    <FormHelperText error={true}>\r\n                                        {formik.errors.brand}\r\n                                    </FormHelperText>\r\n                                    : null\r\n                                }\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <TextField\r\n                                style={{width: '100%'}}\r\n                                name='description'\r\n                                label='Enter description'\r\n                                variant='outlined'\r\n                                multiline\r\n                                rows={4}\r\n                                {...formik.getFieldProps('description')}\r\n                                {...errorHelper(formik, 'description')}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <TextField\r\n                                style={{width: '100%'}}\r\n                                name='price'\r\n                                label='Enter price'\r\n                                variant='outlined'\r\n                                {...formik.getFieldProps('price')}\r\n                                {...errorHelper(formik, 'price')}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <TextField\r\n                                style={{width: '100%'}}\r\n                                name='available'\r\n                                label='Enter avilable guitars'\r\n                                variant='outlined'\r\n                                {...formik.getFieldProps('available')}\r\n                                {...errorHelper(formik, 'available')}\r\n                            />\r\n                        </div>\r\n                        <Divider className='mt-3 mb-3' />\r\n                        <div className='form-group'>\r\n                            <FormControl variant=\"outlined\">\r\n                                <InputLabel id=\"shipping-select-label\">Free shipping</InputLabel>\r\n                                <Select\r\n                                    labelId='shipping-select-label'\r\n                                    label='Free shipping'\r\n                                    name='shipping'\r\n                                    {...formik.getFieldProps('shipping')}\r\n                                    error={ formik.errors.shipping && formik.touched.shipping ?\r\n                                    true : false }\r\n                                >\r\n                                    <MenuItem value={true}>Yes</MenuItem>\r\n                                    <MenuItem value={false}>No</MenuItem>\r\n                                </Select>\r\n                                { formik.errors.shipping && formik.touched.shipping ?\r\n                                    <FormHelperText error={true}>\r\n                                        {formik.error.shipping}\r\n                                    </FormHelperText>\r\n                                    : null\r\n                                }\r\n                            </FormControl>\r\n                            <Divider className='mt-3 mb-3' />\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                type='submit'\r\n                            >\r\n                                { products.byId ? 'Edit Product' : 'Add Product' }\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </>\r\n\r\n            }\r\n        </DashboardLayout>\r\n    )\r\n};\r\n\r\nexport default EditProduct;"]},"metadata":{},"sourceType":"module"}