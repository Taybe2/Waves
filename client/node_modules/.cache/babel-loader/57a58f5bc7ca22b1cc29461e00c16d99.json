{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\dashboard\\\\admin\\\\products\\\\addedit\\\\add.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DashboardLayout from 'components/hoc/dashboardLayout';\nimport { useFormik } from 'formik';\nimport { errorHelper } from 'utils/tools';\nimport Loader from 'utils/loader';\nimport { TextField, Button, Divider, Select, MenuItem, FormControl, FormHelperText } from '@mui/material';\nimport { validation } from './formValues';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddProduct = props => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const notifications = useSelector(state => state.notifications);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      model: '',\n      brand: '',\n      frets: '',\n      woodtype: '',\n      description: '',\n      price: '',\n      available: '',\n      shipping: false\n    },\n    validationSchema: validation,\n    onSubmit: values => {\n      console.log(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    title: \"Add Product\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"mt-3 article_form\",\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: '100%'\n            },\n            name: \"model\",\n            label: \"Enter a model\",\n            variant: \"outlined\",\n            ...formik.getFieldProps('model'),\n            ...errorHelper(formik, 'model')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: '100%'\n            },\n            name: \"frets\",\n            label: \"Amount of frets\",\n            variant: \"outlined\",\n            ...formik.getFieldProps('frets'),\n            ...errorHelper(formik, 'frets')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddProduct, \"uDdq1js7xfdPWhAEKbzVoUlTnqA=\", false, function () {\n  return [useSelector, useDispatch, useFormik];\n});\n\n_c = AddProduct;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/dashboard/admin/products/addedit/add.js"],"names":["React","useEffect","useReducer","useState","useDispatch","useSelector","DashboardLayout","useFormik","errorHelper","Loader","TextField","Button","Divider","Select","MenuItem","FormControl","FormHelperText","validation","AddProduct","props","loading","setLoading","notifications","state","dispatch","formik","initialValues","model","brand","frets","woodtype","description","price","available","shipping","validationSchema","onSubmit","values","console","log","handleSubmit","width","getFieldProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AAEA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SACIC,SADJ,EAEIC,MAFJ,EAGIC,OAHJ,EAIIC,MAJJ,EAKIC,QALJ,EAMIC,WANJ,EAOIC,cAPJ,QAQO,eARP;AAUA,SAASC,UAAT,QAA2B,cAA3B;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMmB,aAAa,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACD,aAAhB,CAAjC;AACA,QAAME,QAAQ,GAAGpB,WAAW,EAA5B;AAEA,QAAMqB,MAAM,GAAGlB,SAAS,CAAC;AACrBmB,IAAAA,aAAa,EAAE;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXC,MAAAA,WAAW,EAAE,EALF;AAMXC,MAAAA,KAAK,EAAE,EANI;AAOXC,MAAAA,SAAS,EAAE,EAPA;AAQXC,MAAAA,QAAQ,EAAE;AARC,KADM;AAWrBC,IAAAA,gBAAgB,EAAElB,UAXG;AAYrBmB,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH;AAdoB,GAAD,CAAxB;AAiBA,sBACI,QAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,aAAvB;AAAA,cACMjB,OAAO,gBACL,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADK,gBAGL;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAoC,QAAA,QAAQ,EAAEK,MAAM,CAACe,YAArD;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAE;AAAR,aADX;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,KAAK,EAAC,eAHV;AAII,YAAA,OAAO,EAAC,UAJZ;AAAA,eAKQhB,MAAM,CAACiB,aAAP,CAAqB,OAArB,CALR;AAAA,eAMQlC,WAAW,CAACiB,MAAD,EAAS,OAAT;AANnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,KAAK,EAAE;AAACgB,cAAAA,KAAK,EAAE;AAAR,aADX;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,KAAK,EAAC,iBAHV;AAII,YAAA,OAAO,EAAC,UAJZ;AAAA,eAKQhB,MAAM,CAACiB,aAAP,CAAqB,OAArB,CALR;AAAA,eAMQlC,WAAW,CAACiB,MAAD,EAAS,OAAT;AANnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAJR;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CAvDD;;GAAMP,U;UAEoBb,W,EACLD,W,EAEFG,S;;;KALbW,U;AAyDN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useReducer, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DashboardLayout from 'components/hoc/dashboardLayout';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { errorHelper } from 'utils/tools';\r\nimport Loader from 'utils/loader';\r\nimport { \r\n    TextField,\r\n    Button,\r\n    Divider,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    FormHelperText\r\n} from '@mui/material';\r\n\r\nimport { validation } from './formValues';\r\n\r\nconst AddProduct = (props) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const notifications = useSelector(state => state.notifications);\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            model: '',\r\n            brand: '',\r\n            frets: '',\r\n            woodtype: '',\r\n            description: '',\r\n            price: '',\r\n            available: '',\r\n            shipping: false\r\n        },\r\n        validationSchema: validation,\r\n        onSubmit: (values) => {\r\n            console.log(values);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <DashboardLayout title=\"Add Product\">\r\n            { loading ?\r\n                <Loader />\r\n                :\r\n                <>\r\n                    <form className='mt-3 article_form' onSubmit={formik.handleSubmit}>\r\n                        <div className='form-group'>\r\n                            <TextField\r\n                                style={{width: '100%'}}\r\n                                name='model'\r\n                                label='Enter a model'\r\n                                variant='outlined'\r\n                                {...formik.getFieldProps('model')}\r\n                                {...errorHelper(formik, 'model')}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <TextField\r\n                                style={{width: '100%'}}\r\n                                name='frets'\r\n                                label='Amount of frets'\r\n                                variant='outlined'\r\n                                {...formik.getFieldProps('frets')}\r\n                                {...errorHelper(formik, 'frets')}\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </>\r\n\r\n            }\r\n        </DashboardLayout>\r\n    )\r\n};\r\n\r\nexport default AddProduct;"]},"metadata":{},"sourceType":"module"}