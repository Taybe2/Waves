{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\dashboard\\\\user\\\\stepper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { errorHelper } from 'utils/tools';\nimport Loader from 'utils/tools';\nimport { TextField, Button, Stepper, Step, StepLabel } from '@mui/material';\nimport usersReducer from 'store/reducers/users.reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EmailStepper = _ref => {\n  _s();\n\n  let {\n    users\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const [emailModal, setEmailModal] = useState(false);\n  const notifications = useSelector(state => state.notifications);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      email: '',\n      newemail: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().required('This is required').email('This is not a valid email').test('match', 'Please check your email', email => {\n        return email === users.data.email;\n      }),\n      newemail: Yup.string().required('This is required').email('This is not a valid email').test('match', 'Please check your email', newemail => {\n        return newemail !== users.data.email;\n      })\n    }),\n    onSubmit: values => {}\n  });\n\n  const closeModal = () => setEmailModal(false);\n\n  const openModal = () => setEmailModal(true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"mt-3 article_form\",\n      style: {\n        maxWidth: '250px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            width: '100%'\n          },\n          name: \"emailstatic\",\n          value: users.data.email,\n          variant: \"outlined\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(EmailStepper, \"HutekT18kItYydGw3PyEFXMXZy4=\", false, function () {\n  return [useSelector, useDispatch, useFormik];\n});\n\n_c = EmailStepper;\nexport default EmailStepper;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailStepper\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/dashboard/user/stepper.js"],"names":["React","useState","useEffect","useFormik","Yup","useSelector","useDispatch","errorHelper","Loader","TextField","Button","Stepper","Step","StepLabel","usersReducer","EmailStepper","users","loading","setLoading","emailModal","setEmailModal","notifications","state","dispatch","formik","enableReinitialize","initialValues","email","newemail","validationSchema","object","string","required","test","data","onSubmit","values","closeModal","openModal","maxWidth","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SACIC,SADJ,EAEIC,MAFJ,EAGIC,OAHJ,EAIIC,IAJJ,EAKIC,SALJ,QAMO,eANP;AAOA,OAAOC,YAAP,MAAyB,8BAAzB;;;;AAEA,MAAMC,YAAY,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMoB,aAAa,GAAGhB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACD,aAAhB,CAAjC;AACA,QAAME,QAAQ,GAAGjB,WAAW,EAA5B;AAEA,QAAMkB,MAAM,GAAGrB,SAAS,CAAC;AACrBsB,IAAAA,kBAAkB,EAAE,IADC;AAErBC,IAAAA,aAAa,EAAE;AAACC,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,QAAQ,EAAE;AAAtB,KAFM;AAGrBC,IAAAA,gBAAgB,EAAEzB,GAAG,CAAC0B,MAAJ,CAAW;AACzBH,MAAAA,KAAK,EAAEvB,GAAG,CAAC2B,MAAJ,GACFC,QADE,CACO,kBADP,EAEFL,KAFE,CAEI,2BAFJ,EAGFM,IAHE,CAGG,OAHH,EAGY,yBAHZ,EAGwCN,KAAD,IAAW;AACjD,eAAOA,KAAK,KAAKX,KAAK,CAACkB,IAAN,CAAWP,KAA5B;AACH,OALE,CADkB;AAOzBC,MAAAA,QAAQ,EAAExB,GAAG,CAAC2B,MAAJ,GACLC,QADK,CACI,kBADJ,EAELL,KAFK,CAEC,2BAFD,EAGLM,IAHK,CAGA,OAHA,EAGS,yBAHT,EAGqCL,QAAD,IAAc;AACpD,eAAOA,QAAQ,KAAKZ,KAAK,CAACkB,IAAN,CAAWP,KAA/B;AACH,OALK;AAPe,KAAX,CAHG;AAiBrBQ,IAAAA,QAAQ,EAAGC,MAAD,IAAY,CAErB;AAnBoB,GAAD,CAAxB;;AAsBA,QAAMC,UAAU,GAAG,MAAMjB,aAAa,CAAC,KAAD,CAAtC;;AACA,QAAMkB,SAAS,GAAI,MAAMlB,aAAa,CAAC,IAAD,CAAtC;;AAEA,sBACI;AAAA,2BACI;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAoC,MAAA,KAAK,EAAE;AAACmB,QAAAA,QAAQ,EAAE;AAAX,OAA3C;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI,QAAC,SAAD;AACI,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WADX;AAEI,UAAA,IAAI,EAAC,aAFT;AAGI,UAAA,KAAK,EAAExB,KAAK,CAACkB,IAAN,CAAWP,KAHtB;AAII,UAAA,OAAO,EAAC,UAJZ;AAKI,UAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAeH,CA9CD;;GAAMZ,Y;UAGoBV,W,EACLC,W,EAEFH,S;;;KANbY,Y;AAgDN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { errorHelper } from 'utils/tools';\r\nimport Loader from 'utils/tools';\r\n\r\nimport {\r\n    TextField,\r\n    Button,\r\n    Stepper,\r\n    Step,\r\n    StepLabel\r\n} from '@mui/material';\r\nimport usersReducer from 'store/reducers/users.reducer';\r\n\r\nconst EmailStepper = ({ users }) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [emailModal, setEmailModal] = useState(false);\r\n    const notifications = useSelector(state => state.notifications);\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {email: '', newemail: ''},\r\n        validationSchema: Yup.object({\r\n            email: Yup.string()\r\n                .required('This is required')\r\n                .email('This is not a valid email')\r\n                .test('match', 'Please check your email', (email) => {\r\n                    return email === users.data.email\r\n                }),\r\n            newemail: Yup.string()\r\n                .required('This is required')\r\n                .email('This is not a valid email')\r\n                .test('match', 'Please check your email', (newemail) => {\r\n                    return newemail !== users.data.email\r\n                })\r\n        }),\r\n        onSubmit: (values) => {\r\n        \r\n        }\r\n    });\r\n\r\n    const closeModal = () => setEmailModal(false);\r\n    const openModal  = () => setEmailModal(true);\r\n\r\n    return (\r\n        <>\r\n            <form className='mt-3 article_form' style={{maxWidth: '250px'}}>\r\n                <div className='form-group'>\r\n                    <TextField \r\n                        style={{ width: '100%' }}\r\n                        name=\"emailstatic\"\r\n                        value={users.data.email}\r\n                        variant='outlined'\r\n                        disabled\r\n                    />\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmailStepper;"]},"metadata":{},"sourceType":"module"}