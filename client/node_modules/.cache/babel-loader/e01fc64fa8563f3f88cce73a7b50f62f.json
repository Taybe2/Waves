{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\hoc\\\\authGuardNew.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthGuard = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isAuth, setIsAuth] = useState(false);\n  const users = useSelector(state => state.users);\n  const location = useLocation();\n  return users.isAuth === true ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true,\n    state: {\n      path: location.pathname\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AuthGuard, \"Ci4fVw4S6An2z1q3g3OqnqZWub0=\", true, function () {\n  return [useSelector];\n});\n\n_c = AuthGuard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/hoc/authGuardNew.js"],"names":["React","useState","useSelector","AuthGuard","children","isAuth","setIsAuth","users","state","location","useLocation","path","pathname"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,OAAO,MAAMC,SAAS,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMM,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAME,QAAQ,GAAGC,WAAW,EAA5B;AAEA,SAAOH,KAAK,CAACF,MAAN,KAAiB,IAAjB,GACLD,QADK,gBAGL,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAsB,IAAA,OAAO,MAA7B;AAA8B,IAAA,KAAK,EAAE;AAAEO,MAAAA,IAAI,EAAEF,QAAQ,CAACG;AAAjB;AAArC;AAAA;AAAA;AAAA;AAAA,UAHF;AAKD,CAVI;;GAAMT,S;UAEKD,W;;;KAFLC,S","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const AuthGuard = ({ children }) => {\r\n    const [isAuth, setIsAuth] = useState(false);\r\n    const users = useSelector(state => state.users);\r\n    const location = useLocation();\r\n  \r\n    return users.isAuth === true ? (\r\n      children\r\n    ) : (\r\n      <Navigate to=\"/login\" replace state={{ path: location.pathname }} />\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}