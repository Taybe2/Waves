{"ast":null,"code":"import axios from \"axios\";\nimport * as actions from './index';\nimport { getAuthHeader, removeTokenCookie, getTokenCookie } from \"utils/tools\";\naxios.defaults.headers.post['Content-Type'] = 'application-json';\nexport const userRegister = values => {\n  return async dispatch => {\n    try {\n      const user = await axios.post(`/api/auth/register`, {\n        email: values.email,\n        password: values.password\n      });\n      dispatch(actions.userAuthenticate({\n        data: user.data.user,\n        auth: true\n      }));\n      dispatch(actions.successGlobal('Welcome! Check your mail to verify your account.'));\n    } catch (error) {\n      dispatch(actions.errorGlobal(error.response.data.message));\n    }\n  };\n};\nexport const userSignIn = values => {\n  return async dispatch => {\n    try {\n      const user = await axios.post(`/api/auth/signin`, {\n        email: values.email,\n        password: values.password\n      });\n      dispatch(actions.userAuthenticate({\n        data: user.data.user,\n        auth: true\n      }));\n      dispatch(actions.successGlobal('Welcome!'));\n    } catch (error) {\n      dispatch(actions.errorGlobal(error.response.data.message));\n    }\n  };\n};\nexport const userIsAuth = () => {\n  return async dispatch => {\n    try {\n      if (!getTokenCookie()) {\n        throw new Error();\n      }\n\n      const user = await axios.get('/api/auth/isauth', getAuthHeader());\n      dispatch(actions.userAuthenticate({\n        data: user.data,\n        auth: true\n      }));\n    } catch (error) {\n      dispatch(actions.userAuthenticate({\n        data: {},\n        auth: false\n      }));\n    }\n  };\n};\nexport const userSignOut = () => {\n  return async dispatch => {\n    removeTokenCookie();\n    dispatch(actions.userSignOut());\n    dispatch(actions.successGlobal('Coodbye!'));\n  };\n};","map":{"version":3,"sources":["C:/React/waves/client/src/store/actions/user.actions.js"],"names":["axios","actions","getAuthHeader","removeTokenCookie","getTokenCookie","defaults","headers","post","userRegister","values","dispatch","user","email","password","userAuthenticate","data","auth","successGlobal","error","errorGlobal","response","message","userSignIn","userIsAuth","Error","get","userSignOut"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB;AACA,SAASC,aAAT,EAAwBC,iBAAxB,EAA2CC,cAA3C,QAAiE,aAAjE;AAEAJ,KAAK,CAACK,QAAN,CAAeC,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA8C,kBAA9C;AAEA,OAAO,MAAMC,YAAY,GAAIC,MAAD,IAAY;AACpC,SAAO,MAAMC,QAAN,IAAmB;AACtB,QAAI;AACA,YAAMC,IAAI,GAAG,MAAMX,KAAK,CAACO,IAAN,CAAY,oBAAZ,EAAiC;AAChDK,QAAAA,KAAK,EAAEH,MAAM,CAACG,KADkC;AAEhDC,QAAAA,QAAQ,EAAEJ,MAAM,CAACI;AAF+B,OAAjC,CAAnB;AAIAH,MAAAA,QAAQ,CAACT,OAAO,CAACa,gBAAR,CAAyB;AAC9BC,QAAAA,IAAI,EAAEJ,IAAI,CAACI,IAAL,CAAUJ,IADc;AAE9BK,QAAAA,IAAI,EAAE;AAFwB,OAAzB,CAAD,CAAR;AAIAN,MAAAA,QAAQ,CAACT,OAAO,CAACgB,aAAR,CAAsB,kDAAtB,CAAD,CAAR;AACH,KAVD,CAUC,OAAMC,KAAN,EAAa;AACVR,MAAAA,QAAQ,CAACT,OAAO,CAACkB,WAAR,CAAoBD,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBM,OAAxC,CAAD,CAAR;AACH;AACJ,GAdD;AAeH,CAhBM;AAkBP,OAAO,MAAMC,UAAU,GAAIb,MAAD,IAAY;AAClC,SAAO,MAAMC,QAAN,IAAmB;AACtB,QAAI;AACA,YAAMC,IAAI,GAAG,MAAMX,KAAK,CAACO,IAAN,CAAY,kBAAZ,EAA+B;AAC9CK,QAAAA,KAAK,EAAEH,MAAM,CAACG,KADgC;AAE9CC,QAAAA,QAAQ,EAAEJ,MAAM,CAACI;AAF6B,OAA/B,CAAnB;AAIAH,MAAAA,QAAQ,CAACT,OAAO,CAACa,gBAAR,CAAyB;AAC9BC,QAAAA,IAAI,EAAEJ,IAAI,CAACI,IAAL,CAAUJ,IADc;AAE9BK,QAAAA,IAAI,EAAE;AAFwB,OAAzB,CAAD,CAAR;AAIAN,MAAAA,QAAQ,CAACT,OAAO,CAACgB,aAAR,CAAsB,UAAtB,CAAD,CAAR;AACH,KAVD,CAUC,OAAMC,KAAN,EAAa;AACVR,MAAAA,QAAQ,CAACT,OAAO,CAACkB,WAAR,CAAoBD,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBM,OAAxC,CAAD,CAAR;AACH;AACJ,GAdD;AAeH,CAhBM;AAkBP,OAAO,MAAME,UAAU,GAAG,MAAM;AAC5B,SAAO,MAAMb,QAAN,IAAmB;AACtB,QAAI;AACA,UAAG,CAACN,cAAc,EAAlB,EAAsB;AAClB,cAAM,IAAIoB,KAAJ,EAAN;AACH;;AACD,YAAMb,IAAI,GAAG,MAAMX,KAAK,CAACyB,GAAN,CAAU,kBAAV,EAA8BvB,aAAa,EAA3C,CAAnB;AAEAQ,MAAAA,QAAQ,CAACT,OAAO,CAACa,gBAAR,CAAyB;AAACC,QAAAA,IAAI,EAAEJ,IAAI,CAACI,IAAZ;AAAkBC,QAAAA,IAAI,EAAE;AAAxB,OAAzB,CAAD,CAAR;AACH,KAPD,CAOE,OAAME,KAAN,EAAa;AACXR,MAAAA,QAAQ,CAACT,OAAO,CAACa,gBAAR,CAAyB;AAACC,QAAAA,IAAI,EAAE,EAAP;AAAWC,QAAAA,IAAI,EAAE;AAAjB,OAAzB,CAAD,CAAR;AACH;AACJ,GAXD;AAYH,CAbM;AAeP,OAAO,MAAMU,WAAW,GAAG,MAAM;AAC7B,SAAO,MAAMhB,QAAN,IAAmB;AACtBP,IAAAA,iBAAiB;AACjBO,IAAAA,QAAQ,CAACT,OAAO,CAACyB,WAAR,EAAD,CAAR;AACAhB,IAAAA,QAAQ,CAACT,OAAO,CAACgB,aAAR,CAAsB,UAAtB,CAAD,CAAR;AACH,GAJD;AAKH,CANM","sourcesContent":["import axios from \"axios\";\r\nimport * as actions from './index';\r\nimport { getAuthHeader, removeTokenCookie, getTokenCookie } from \"utils/tools\";\r\n\r\naxios.defaults.headers.post['Content-Type'] = 'application-json';\r\n\r\nexport const userRegister = (values) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const user = await axios.post(`/api/auth/register`, {\r\n                email: values.email,\r\n                password: values.password\r\n            });\r\n            dispatch(actions.userAuthenticate({\r\n                data: user.data.user,\r\n                auth: true\r\n            }))\r\n            dispatch(actions.successGlobal('Welcome! Check your mail to verify your account.'));\r\n        }catch(error) {\r\n            dispatch(actions.errorGlobal(error.response.data.message));\r\n        }\r\n    }\r\n}\r\n\r\nexport const userSignIn = (values) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const user = await axios.post(`/api/auth/signin`, {\r\n                email: values.email,\r\n                password: values.password\r\n            });\r\n            dispatch(actions.userAuthenticate({\r\n                data: user.data.user,\r\n                auth: true\r\n            }))\r\n            dispatch(actions.successGlobal('Welcome!'));\r\n        }catch(error) {\r\n            dispatch(actions.errorGlobal(error.response.data.message));\r\n        }\r\n    }\r\n}\r\n\r\nexport const userIsAuth = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n            if(!getTokenCookie()) {\r\n                throw new Error();\r\n            }\r\n            const user = await axios.get('/api/auth/isauth', getAuthHeader());\r\n\r\n            dispatch(actions.userAuthenticate({data: user.data, auth: true}));\r\n        } catch(error) {\r\n            dispatch(actions.userAuthenticate({data: {}, auth: false}));\r\n        }\r\n    }\r\n}\r\n\r\nexport const userSignOut = () => {\r\n    return async(dispatch) => {\r\n        removeTokenCookie();\r\n        dispatch(actions.userSignOut());\r\n        dispatch(actions.successGlobal('Coodbye!'))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}