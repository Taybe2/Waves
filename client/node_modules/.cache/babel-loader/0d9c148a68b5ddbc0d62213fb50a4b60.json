{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\hoc\\\\authGuard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Loader from 'utils/loader';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthGuard = ComposedComponent => {\n  _s();\n\n  const [isAuth, setIsAuth] = useState(false);\n  const users = useSelector(state => state.users);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!users.auth) {\n      navigate('/');\n    } else {\n      setIsAuth(true);\n    }\n  }, [navigate, users.auth]);\n\n  class AuthHoc extends React.Component {\n    constructor() {\n      super(...arguments);\n\n      this.AuthenticationCheck = () => {\n        if (!isAuth) {\n          return /*#__PURE__*/_jsxDEV(Loader, {\n            full: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(ComposedComponent, {\n            users: users,\n            ...this.props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this);\n        }\n      };\n    }\n\n    render() {\n      return this.AuthenticationCheck();\n    }\n\n  }\n\n  return AuthHoc;\n};\n\n_s(AuthGuard, \"5PvLs6KfLBj0REw2zgWMQEyGPYI=\", false, function () {\n  return [useSelector, useNavigate];\n});\n\n_c = AuthGuard;\nexport default AuthGuard();\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/hoc/authGuard.js"],"names":["React","useState","useEffect","useSelector","Loader","useNavigate","AuthGuard","ComposedComponent","isAuth","setIsAuth","users","state","navigate","auth","AuthHoc","Component","AuthenticationCheck","props","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,SAAS,GAAIC,iBAAD,IAAuB;AAAA;;AACrC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AACQ,QAAMS,KAAK,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAME,QAAQ,GAAGP,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACQ,KAAK,CAACG,IAAV,EAAgB;AACZD,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,KAFD,MAEO;AACHH,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,GANQ,EAMN,CAACG,QAAD,EAAWF,KAAK,CAACG,IAAjB,CANM,CAAT;;AAOR,QAAMC,OAAN,SAAsBd,KAAK,CAACe,SAA5B,CAAsC;AAAA;AAAA;;AAAA,WAClCC,mBADkC,GACZ,MAAM;AAExB,YAAG,CAACR,MAAJ,EAAY;AACR,8BACI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,kBADJ;AAIH,SALD,MAKO;AACH,8BACI,QAAC,iBAAD;AAAmB,YAAA,KAAK,EAAEE,KAA1B;AAAA,eAAqC,KAAKO;AAA1C;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH;AACJ,OAbiC;AAAA;;AAelCC,IAAAA,MAAM,GAAG;AACL,aAAO,KAAKF,mBAAL,EAAP;AACH;;AAjBiC;;AAmBtC,SAAOF,OAAP;AACH,CAhCD;;GAAMR,S;UAEoBH,W,EACGE,W;;;KAHvBC,S;AAkCN,eAAeA,SAAS,EAAxB","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Loader from 'utils/loader';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthGuard = (ComposedComponent) => {\r\n    const [isAuth, setIsAuth] = useState(false);\r\n            const users = useSelector(state => state.users);\r\n            const navigate = useNavigate();\r\n\r\n            useEffect(() => {\r\n                if(!users.auth) {\r\n                    navigate('/');\r\n                } else {\r\n                    setIsAuth(true);\r\n                }\r\n            }, [navigate, users.auth]);\r\n    class AuthHoc extends React.Component {\r\n        AuthenticationCheck = () => {\r\n\r\n            if(!isAuth) {\r\n                return(\r\n                    <Loader full={true} />\r\n\r\n                );\r\n            } else {\r\n                return (\r\n                    <ComposedComponent users={users} {...this.props} />\r\n                )\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return this.AuthenticationCheck();\r\n        };\r\n    }\r\n    return AuthHoc;\r\n};\r\n\r\nexport default AuthGuard();"]},"metadata":{},"sourceType":"module"}