{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\hoc\\\\authGuardNew.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Loader from 'utils/loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthGuard = _ref => {\n  _s();\n\n  let {\n    props,\n    children\n  } = _ref;\n  const [isAuth, setIsAuth] = useState(false);\n  const users = useSelector(state => state.users);\n  const location = useLocation();\n  const navigate = useNavigate();\n  console.log(props);\n  useEffect(() => {\n    if (!users.auth) {\n      navigate('/');\n    } else {\n      setIsAuth(true);\n    }\n  }, [navigate, users.auth]);\n\n  if (!isAuth) {\n    return /*#__PURE__*/_jsxDEV(Loader, {\n      full: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  } else {\n    return children;\n  }\n};\n\n_s(AuthGuard, \"0Tnvqb73P+6DPdv4LC/G10TGjug=\", false, function () {\n  return [useSelector, useLocation, useNavigate];\n});\n\n_c = AuthGuard;\nexport default AuthGuard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/hoc/authGuardNew.js"],"names":["React","useState","useEffect","useSelector","useLocation","useNavigate","Loader","AuthGuard","props","children","isAuth","setIsAuth","users","state","location","navigate","console","log","auth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,MAAMC,SAAS,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAuB;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMW,KAAK,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAME,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,QAAQ,GAAGV,WAAW,EAA5B;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACU,KAAK,CAACM,IAAV,EAAgB;AACZH,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,KAFD,MAEO;AACHJ,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,GANQ,EAMN,CAACI,QAAD,EAAWH,KAAK,CAACM,IAAjB,CANM,CAAT;;AAQA,MAAG,CAACR,MAAJ,EAAY;AACR,wBACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH,GALD,MAKO;AACH,WACID,QADJ;AAGH;AACJ,CAzBD;;GAAMF,S;UAEYJ,W,EACGC,W,EACAC,W;;;KAJfE,S;AA2BN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport Loader from 'utils/loader';\r\n\r\nconst AuthGuard = ({props, children }) => {\r\n    const [isAuth, setIsAuth] = useState(false);\r\n    const users = useSelector(state => state.users);\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    console.log(props);\r\n\r\n    useEffect(() => {\r\n        if(!users.auth) {\r\n            navigate('/');\r\n        } else {\r\n            setIsAuth(true);\r\n        }\r\n    }, [navigate, users.auth]);\r\n  \r\n    if(!isAuth) {\r\n        return(\r\n            <Loader full={true} />\r\n\r\n        )\r\n    } else {\r\n        return (\r\n            children\r\n        )\r\n    }\r\n};\r\n\r\nexport default AuthGuard;"]},"metadata":{},"sourceType":"module"}