{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\dashboard\\\\admin\\\\products\\\\addedit\\\\picViewer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Modal, Button, ModalBody } from 'react-bootstrap';\nimport Loader from 'utils/loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PicViewer = _ref => {\n  _s();\n\n  let {\n    formik,\n    deletePic\n  } = _ref;\n  const [idToDelete, setIdToDelete] = useState(null);\n  const [show, setShow] = useState(false);\n  const [loading, setLoading] = useState(flase);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = (item, index) => {\n    console.log(item);\n    console.log(index);\n    setIdToDelete({\n      id: item.id,\n      index: index\n    });\n    setShow(true);\n  };\n\n  const confirmDelete = () => {\n    setLoading(true);\n    deletePic(idToDelete);\n    handleClose();\n    setIdToDelete(null);\n  };\n\n  console.log(formik.values.images);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: formik.values && formik.values.images ? formik.values.images.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pic_block\",\n        onClick: () => handleShow(item, i),\n        style: {\n          background: `url(${item.url})`\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }, this)) : null\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Confirm Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Are you sure you want to delete this image?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: confirmDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PicViewer, \"T2tDSBd5ZzNsXGHhCJY8suVCKgc=\");\n\n_c = PicViewer;\nexport default PicViewer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PicViewer\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/dashboard/admin/products/addedit/picViewer.js"],"names":["React","useState","Modal","Button","ModalBody","Loader","PicViewer","formik","deletePic","idToDelete","setIdToDelete","show","setShow","loading","setLoading","flase","handleClose","handleShow","item","index","console","log","id","confirmDelete","values","images","map","i","background","url"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Modal, Button, ModalBody } from 'react-bootstrap';\r\nimport Loader from 'utils/loader';\r\n\r\nconst PicViewer = ({ formik, deletePic }) => {\r\n    const [idToDelete, setIdToDelete] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    const [loading, setLoading] = useState(flase);\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = (item, index) => {\r\n        console.log(item)\r\n        console.log(index);\r\n        setIdToDelete({id: item.id, index: index});\r\n        setShow(true);\r\n    };\r\n\r\n    const confirmDelete = () => {\r\n        setLoading(true);\r\n        deletePic(idToDelete)\r\n        handleClose();\r\n        setIdToDelete(null);\r\n    }\r\n    console.log(formik.values.images);\r\n\r\n    return (\r\n        <>\r\n            { loading ? \r\n                <Loader />\r\n                :\r\n                <>\r\n                    { formik.values && formik.values.images ?\r\n                        formik.values.images.map((item, i) => (\r\n                            <div key={i}\r\n                                className=\"pic_block\"\r\n                                onClick={() => handleShow(item, i)}\r\n                                style={{\r\n                                    background: `url(${item.url})`\r\n                                }}\r\n                            ></div>\r\n                        ))\r\n                        : null\r\n                    }\r\n                </>\r\n            }\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirm Delete</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Are you sure you want to delete this image?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={confirmDelete}>\r\n                        Delete\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PicViewer;"]},"metadata":{},"sourceType":"module"}