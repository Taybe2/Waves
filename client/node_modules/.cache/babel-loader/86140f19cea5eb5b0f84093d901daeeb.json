{"ast":null,"code":"import axios from \"axios\";\nimport * as actions from './index';\nexport const productsBySort = _ref => {\n  let {\n    limit,\n    sortBy,\n    order\n  } = _ref;\n  return async dispatch => {\n    try {\n      const products = await axios.get('api/products/all', {\n        params: {\n          limit,\n          sortBy,\n          order\n        }\n      });\n\n      switch (sortBy) {\n        case 'itemSold':\n          dispatch(actions.productsBySold(products.data));\n          break;\n\n        case 'date':\n          dispatch(actions.productsByDate(products.data));\n          break;\n\n        default:\n          return false;\n      }\n    } catch (error) {\n      dispatch(actions.errorGlobal('Sorry something happened, try again later'));\n    }\n  };\n};\nexport const paginate = args => {\n  return async dispatch => {\n    try {\n      const products = await axios.post(`/products/paginate/all`, args);\n    } catch (error) {\n      dispatch(actions.errorGlobal(error.response.data.message));\n    }\n  };\n};","map":{"version":3,"sources":["C:/React/waves/client/src/store/actions/product.actions.js"],"names":["axios","actions","productsBySort","limit","sortBy","order","dispatch","products","get","params","productsBySold","data","productsByDate","error","errorGlobal","paginate","args","post","response","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB;AAEA,OAAO,MAAMC,cAAc,GAAG,QAA8B;AAAA,MAA7B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA;AAAjB,GAA6B;AACxD,SAAO,MAAMC,QAAN,IAAmB;AACtB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,kBAAV,EAA8B;AACjDC,QAAAA,MAAM,EAAE;AACJN,UAAAA,KADI;AAEJC,UAAAA,MAFI;AAGJC,UAAAA;AAHI;AADyC,OAA9B,CAAvB;;AAQA,cAAQD,MAAR;AACI,aAAK,UAAL;AACIE,UAAAA,QAAQ,CAACL,OAAO,CAACS,cAAR,CAAuBH,QAAQ,CAACI,IAAhC,CAAD,CAAR;AACA;;AACJ,aAAK,MAAL;AACIL,UAAAA,QAAQ,CAACL,OAAO,CAACW,cAAR,CAAuBL,QAAQ,CAACI,IAAhC,CAAD,CAAR;AACA;;AACJ;AACI,iBAAO,KAAP;AARR;AAWH,KApBD,CAoBE,OAAME,KAAN,EAAa;AACXP,MAAAA,QAAQ,CAACL,OAAO,CAACa,WAAR,CAAoB,2CAApB,CAAD,CAAR;AACH;AACJ,GAxBD;AAyBH,CA1BM;AA4BP,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AAC9B,SAAO,MAAMV,QAAN,IAAmB;AACtB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACiB,IAAN,CAAY,wBAAZ,EAAqCD,IAArC,CAAvB;AACH,KAFD,CAEE,OAAMH,KAAN,EAAa;AACXP,MAAAA,QAAQ,CAACL,OAAO,CAACa,WAAR,CAAoBD,KAAK,CAACK,QAAN,CAAeP,IAAf,CAAoBQ,OAAxC,CAAD,CAAR;AACH;AACJ,GAND;AAOH,CARM","sourcesContent":["import axios from \"axios\";\r\nimport * as actions from './index';\r\n\r\nexport const productsBySort = ({ limit, sortBy, order }) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const products = await axios.get('api/products/all', {\r\n                params: {\r\n                    limit,\r\n                    sortBy,\r\n                    order\r\n                }\r\n            });\r\n\r\n            switch (sortBy) {\r\n                case 'itemSold':\r\n                    dispatch(actions.productsBySold(products.data));\r\n                    break;\r\n                case 'date':\r\n                    dispatch(actions.productsByDate(products.data));\r\n                    break;\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n        } catch(error) {\r\n            dispatch(actions.errorGlobal('Sorry something happened, try again later'));\r\n        }\r\n    }\r\n}\r\n\r\nexport const paginate = (args) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const products = await axios.post(`/products/paginate/all`, args);\r\n        } catch(error) {\r\n            dispatch(actions.errorGlobal(error.response.data.message));\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}