{"ast":null,"code":"import axios from \"axios\";\nimport * as actions from './index';\nimport { getAuthHeader } from \"utils/tools\";\naxios.defaults.headers.post['Content-Type'] = 'application-json';\nexport const updateSiteVars = vars => {\n  return async dispatch => {\n    try {\n      const site = await axios.patch(`/api/site`, vars, getAuthHeader);\n      dispatch(actions.siteGetVars(site.data));\n      dispatch(actions.successGlobal('Site Information updated.'));\n    } catch (error) {\n      dispatch(actions.errorGlobal(error.response.data.message));\n    }\n  };\n};","map":{"version":3,"sources":["C:/React/waves/client/src/store/actions/site.actions.js"],"names":["axios","actions","getAuthHeader","defaults","headers","post","updateSiteVars","vars","dispatch","site","patch","siteGetVars","data","successGlobal","error","errorGlobal","response","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB;AACA,SAASC,aAAT,QAA+B,aAA/B;AAEAF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA8C,kBAA9C;AAGA,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAU;AACpC,SAAO,MAAMC,QAAN,IAAmB;AACtB,QAAI;AACA,YAAMC,IAAI,GAAG,MAAMT,KAAK,CAACU,KAAN,CAAa,WAAb,EAAyBH,IAAzB,EAA+BL,aAA/B,CAAnB;AAEAM,MAAAA,QAAQ,CAACP,OAAO,CAACU,WAAR,CAAoBF,IAAI,CAACG,IAAzB,CAAD,CAAR;AACAJ,MAAAA,QAAQ,CAACP,OAAO,CAACY,aAAR,CAAsB,2BAAtB,CAAD,CAAR;AACH,KALD,CAKC,OAAMC,KAAN,EAAa;AACVN,MAAAA,QAAQ,CAACP,OAAO,CAACc,WAAR,CAAoBD,KAAK,CAACE,QAAN,CAAeJ,IAAf,CAAoBK,OAAxC,CAAD,CAAR;AACH;AACJ,GATD;AAUH,CAXM","sourcesContent":["import axios from \"axios\";\r\nimport * as actions from './index';\r\nimport { getAuthHeader, } from \"utils/tools\";\r\n\r\naxios.defaults.headers.post['Content-Type'] = 'application-json';\r\n\r\n\r\nexport const updateSiteVars = (vars) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const site = await axios.patch(`/api/site`, vars, getAuthHeader);\r\n            \r\n            dispatch(actions.siteGetVars(site.data));\r\n            dispatch(actions.successGlobal('Site Information updated.'));\r\n        }catch(error) {\r\n            dispatch(actions.errorGlobal(error.response.data.message));\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}