{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\hoc\\\\mainLayout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { showToast } from 'utils/tools';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MainLayout = props => {\n  _s();\n\n  const notifications = useSelector(state => state.notifications);\n  useEffect(() => {\n    if (notifications && notifications.error) {\n      const msg = notifications.msg ? notifications.msg : 'Error';\n      showToast('ERROR', msg);\n    }\n\n    if (notifications && notifications.success) {\n      const msg = notifications.msg ? notifications.msg : 'Success';\n      showToast('SUCCESS', msg);\n    }\n  }, [notifications]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [props.children, /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MainLayout, \"S3/AiFI8rCn0dWwSq9Nvg2k278M=\", false, function () {\n  return [useSelector];\n});\n\n_c = MainLayout;\nexport default MainLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainLayout\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/hoc/mainLayout.js"],"names":["React","useEffect","ToastContainer","useSelector","useDispatch","showToast","MainLayout","props","notifications","state","error","msg","success","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAO,uCAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,SAAT,QAA0B,aAA1B;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,aAAa,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,aAAhB,CAAjC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGO,aAAa,IAAIA,aAAa,CAACE,KAAlC,EAAyC;AACrC,YAAMC,GAAG,GAAGH,aAAa,CAACG,GAAd,GAAoBH,aAAa,CAACG,GAAlC,GAAwC,OAApD;AACAN,MAAAA,SAAS,CAAC,OAAD,EAAUM,GAAV,CAAT;AACH;;AAED,QAAGH,aAAa,IAAIA,aAAa,CAACI,OAAlC,EAA2C;AACvC,YAAMD,GAAG,GAAGH,aAAa,CAACG,GAAd,GAAoBH,aAAa,CAACG,GAAlC,GAAwC,SAApD;AACAN,MAAAA,SAAS,CAAC,SAAD,EAAYM,GAAZ,CAAT;AACH;AACJ,GAVQ,EAUN,CAACH,aAAD,CAVM,CAAT;AAYA,sBACI;AAAA,eACMD,KAAK,CAACM,QADZ,eAEI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CArBD;;GAAMP,U;UACoBH,W;;;KADpBG,U;AAuBN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { showToast } from 'utils/tools';\r\n\r\nconst MainLayout = (props) => {\r\n    const notifications = useSelector(state => state.notifications);\r\n\r\n    useEffect(() => {\r\n        if(notifications && notifications.error) {\r\n            const msg = notifications.msg ? notifications.msg : 'Error';\r\n            showToast('ERROR', msg);\r\n        }\r\n\r\n        if(notifications && notifications.success) {\r\n            const msg = notifications.msg ? notifications.msg : 'Success';\r\n            showToast('SUCCESS', msg);\r\n        }\r\n    }, [notifications])\r\n\r\n    return (\r\n        <>\r\n            { props.children }\r\n            <ToastContainer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainLayout;"]},"metadata":{},"sourceType":"module"}