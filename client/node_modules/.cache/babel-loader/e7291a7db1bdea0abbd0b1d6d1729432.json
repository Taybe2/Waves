{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\dashboard\\\\user\\\\cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DashboardLayout from 'components/hoc/dashboardLayout';\nimport Loader from 'utils/loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CartDetail from './cartDetail';\nimport { userRemoveFromCart } from 'store/actions/user.actions';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserCart = _ref => {\n  _s();\n\n  let {\n    users\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const notifications = useSelector(state => state.notifications);\n  const dispatch = useDispatch();\n\n  const removeItem = position => {\n    dispatch(userRemoveFromCart(position));\n  };\n\n  const calculateTotal = () => {\n    let total = 0;\n    users.cart.forEach(element => {\n      total += parseInt(element.price, 10);\n    });\n    return total;\n  };\n\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    title: \"Your Cart\",\n    children: users.cart && users.cart.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CartDetail, {\n        products: users.cart,\n        removeItem: position => removeItem(position)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_cart_sum\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Total Amount: $\", calculateTotal(), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pp_button\",\n            children: /*#__PURE__*/_jsxDEV(PayPalButton, {\n              options: {\n                clientId: \"ATVKKDpfLJZ2-njiZs0djpb-PnEplG_p-er7MQEeVk7doKcQX9NMdeZdvyGmhcYfK2rjcXfmjxlH__p4\",\n                currency: \"USD\",\n                disableFunding: 'credit,card'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"There is nothing in your cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserCart, \"JCSjs25ZJuj+10n+pQV9RcwuKOQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = UserCart;\nexport default UserCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserCart\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/dashboard/user/cart.js"],"names":["React","useState","DashboardLayout","Loader","useDispatch","useSelector","CartDetail","userRemoveFromCart","PayPalButton","UserCart","users","loading","setLoading","notifications","state","dispatch","removeItem","position","calculateTotal","total","cart","forEach","element","parseInt","price","length","clientId","currency","disableFunding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AACA,SAASC,YAAT,QAA6B,wBAA7B;;;;AAEA,MAAMC,QAAQ,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMY,aAAa,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,aAAhB,CAAjC;AACA,QAAME,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,QAAMY,UAAU,GAAIC,QAAD,IAAc;AAC7BF,IAAAA,QAAQ,CAACR,kBAAkB,CAACU,QAAD,CAAnB,CAAR;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AACzB,QAAIC,KAAK,GAAG,CAAZ;AACAT,IAAAA,KAAK,CAACU,IAAN,CAAWC,OAAX,CAAmBC,OAAO,IAAI;AAC1BH,MAAAA,KAAK,IAAII,QAAQ,CAACD,OAAO,CAACE,KAAT,EAAgB,EAAhB,CAAjB;AACH,KAFD;AAGA,WAAOL,KAAP;AACH,GAND;;AAQA,sBACI,QAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,WAAvB;AAAA,cACMT,KAAK,CAACU,IAAN,IAAcV,KAAK,CAACU,IAAN,CAAWK,MAAX,GAAoB,CAAlC,gBACM;AAAA,8BACI,QAAC,UAAD;AACI,QAAA,QAAQ,EAAEf,KAAK,CAACU,IADpB;AAEI,QAAA,UAAU,EAAGH,QAAD,IAAcD,UAAU,CAACC,QAAD;AAFxC;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACI;AAAA,wCACoBC,cAAc,EADlC,EAEMP,OAAO,gBACD,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBADC,gBAGD;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACI,QAAC,YAAD;AACI,cAAA,OAAO,EAAE;AACLe,gBAAAA,QAAQ,EAAE,kFADL;AAELC,gBAAAA,QAAQ,EAAE,KAFL;AAGLC,gBAAAA,cAAc,EAAE;AAHX;AADb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA,oBADN,gBA0BM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAjDD;;GAAMnB,Q;UAEoBJ,W,EACLD,W;;;KAHfK,Q;AAmDN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport DashboardLayout from 'components/hoc/dashboardLayout';\r\nimport Loader from 'utils/loader';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CartDetail from './cartDetail';\r\nimport { userRemoveFromCart } from 'store/actions/user.actions';\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\n\r\nconst UserCart = ({users}) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const notifications = useSelector(state => state.notifications);\r\n    const dispatch = useDispatch();\r\n\r\n    const removeItem = (position) => {\r\n        dispatch(userRemoveFromCart(position));\r\n    }\r\n\r\n    const calculateTotal = () => {\r\n        let total = 0;\r\n        users.cart.forEach(element => {\r\n            total += parseInt(element.price, 10);\r\n        });\r\n        return total;\r\n    }\r\n\r\n    return (\r\n        <DashboardLayout title=\"Your Cart\">\r\n            { users.cart && users.cart.length > 0 ?\r\n                    <>\r\n                        <CartDetail \r\n                            products={users.cart}\r\n                            removeItem={(position) => removeItem(position)}\r\n                        />\r\n                        <div className='user_cart_sum'>\r\n                            <div>\r\n                                Total Amount: ${calculateTotal()}\r\n                                { loading ? \r\n                                        <Loader />\r\n                                    :\r\n                                        <div className='pp_button'>\r\n                                            <PayPalButton \r\n                                                options={{\r\n                                                    clientId: \"ATVKKDpfLJZ2-njiZs0djpb-PnEplG_p-er7MQEeVk7doKcQX9NMdeZdvyGmhcYfK2rjcXfmjxlH__p4\",\r\n                                                    currency: \"USD\",\r\n                                                    disableFunding: 'credit,card'\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                :\r\n                    <div>There is nothing in your cart</div>\r\n            }\r\n        </DashboardLayout>\r\n    )\r\n}\r\n\r\nexport default UserCart;"]},"metadata":{},"sourceType":"module"}