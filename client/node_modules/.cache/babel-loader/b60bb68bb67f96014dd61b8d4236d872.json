{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\utils\\\\tools.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\nimport { toast } from 'react-toastify';\nimport cookie from 'react-cookies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WavesButton = props => {\n  let template = '';\n\n  switch (props.type) {\n    case \"default\":\n      template = /*#__PURE__*/_jsxDEV(Link, {\n        className: !props.altClass ? 'link_default' : props.altClass,\n        to: props.linkTo,\n        style: { ...props.style\n        },\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 24\n      }, this);\n      break;\n\n    case \"bag_link\":\n      template = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bag_link\",\n        onClick: () => {\n          props.runAction();\n        },\n        style: { ...props.style\n        },\n        children: /*#__PURE__*/_jsxDEV(AddShoppingCartIcon, {\n          style: {\n            fontSize: props.iconSize\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this);\n      break;\n\n    case \"add_to_cart_link\":\n      template = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add_to_cart_link\",\n        onClick: () => {\n          props.runAction();\n        },\n        children: [/*#__PURE__*/_jsxDEV(AddShoppingCartIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), \"Add to Cart\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 24\n      }, this);\n      break;\n\n    default:\n      template = '';\n  }\n\n  return template;\n};\n_c = WavesButton;\nexport const renderCardImage = image => {\n  if (image.length > 0) {\n    return image[0].url;\n  } else {\n    return '/images/image_not_availble.png';\n  }\n};\nexport const showToast = (type, msg) => {\n  switch (type) {\n    case 'SUCCESS':\n      toast.success(msg, {\n        position: toast.POSITION.BOTTOM_RIGHT\n      });\n      break;\n\n    case 'ERROR':\n      toast.error(msg, {\n        position: toast.POSITION.BOTTOM_RIGHT\n      });\n      break;\n\n    default:\n      return false;\n  }\n};\nexport const errorHelper = (formik, value) => ({\n  error: formik.errors[value] && formik.touched[value] ? true : false,\n  helperText: formik.errors[value] && formik.touched[value] ? formik.errors[value] : null\n});\nexport const getTokenCookie = () => cookie.load('x-access-token');\nexport const removeTokenCookie = () => cookie.remove('x-access-token', {\n  path: '/'\n});\nexport const getAuthHeader = () => {\n  return {\n    headers: {\n      'Authorization': `Bearer ${getTokenCookie()}`\n    }\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"WavesButton\");","map":{"version":3,"sources":["C:/React/waves/client/src/utils/tools.js"],"names":["React","Link","AddShoppingCartIcon","toast","cookie","WavesButton","props","template","type","altClass","linkTo","style","title","runAction","fontSize","iconSize","renderCardImage","image","length","url","showToast","msg","success","position","POSITION","BOTTOM_RIGHT","error","errorHelper","formik","value","errors","touched","helperText","getTokenCookie","load","removeTokenCookie","remove","path","getAuthHeader","headers"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\r\nimport { toast } from 'react-toastify';\r\nimport cookie from 'react-cookies';\r\n\r\nexport const WavesButton = (props) => {\r\n    let template = '';\r\n    \r\n    switch(props.type) {\r\n        case \"default\":\r\n            template = <Link\r\n            className={\r\n                !props.altClass ? 'link_default' : props.altClass\r\n            }\r\n            to={props.linkTo}\r\n            style={{\r\n                ...props.style\r\n            }}\r\n            >\r\n                {props.title}\r\n            </Link>\r\n        break;\r\n        case \"bag_link\":\r\n            template = <div\r\n                    className='bag_link'\r\n                    onClick={() => {\r\n                        props.runAction()\r\n                    }}\r\n                    style={{...props.style }}\r\n                >\r\n                    <AddShoppingCartIcon style={{ fontSize: props.iconSize }} />\r\n                </div>\r\n        break;\r\n        case \"add_to_cart_link\":\r\n            template = <div \r\n                    className='add_to_cart_link'\r\n                    onClick={() => {\r\n                        props.runAction()\r\n                    }}\r\n                >\r\n                    <AddShoppingCartIcon />\r\n                    Add to Cart\r\n                </div>\r\n            break;\r\n        default:\r\n            template='';\r\n    }\r\n\r\n    return template;\r\n}\r\n\r\nexport const renderCardImage = (image) => {\r\n    if(image.length > 0) {\r\n        return image[0].url\r\n    } else {\r\n        return '/images/image_not_availble.png'\r\n    }\r\n}\r\n\r\nexport const showToast = (type, msg) => {\r\n    switch(type) {\r\n        case 'SUCCESS':\r\n            toast.success(msg, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n        break;\r\n        case 'ERROR':\r\n            toast.error(msg, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        break;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n\r\nexport const errorHelper = (formik, value) => ({\r\n    error: formik.errors[value] && formik.touched[value] ? true : false,\r\n    helperText: formik.errors[value] && formik.touched[value] ? formik.errors[value] : null\r\n})\r\n\r\nexport const getTokenCookie = () => cookie.load('x-access-token');\r\nexport const removeTokenCookie = () => cookie.remove('x-access-token', {path: '/'});\r\nexport const getAuthHeader = () => {\r\n    return { \r\n        headers: { \r\n            'Authorization': `Bearer ${getTokenCookie()}` \r\n        }\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}