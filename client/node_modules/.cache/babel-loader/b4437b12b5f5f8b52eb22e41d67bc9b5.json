{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\hoc\\\\authGuardNew.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Loader from '/utils/loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthGuard = _ref => {\n  _s();\n\n  let {\n    users,\n    children\n  } = _ref;\n  const [isAuth, setIsAuth] = useState(false); //const users = useSelector(state => state.users);\n\n  const location = useLocation();\n  const navigate = useNavigate();\n  console.log(users.isAuth);\n  useEffect(() => {\n    if (!users.auth) {\n      navigate('/');\n    } else {\n      setIsAuth(true);\n    }\n  }, [navigate, users.auth]);\n\n  if (!isAuth) {\n    return /*#__PURE__*/_jsxDEV(Loader, {\n      full: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  } else {\n    return children;\n  }\n};\n\n_s(AuthGuard, \"cUcKSRWTy5Kr+EsYT4Dd9FvbaBg=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = AuthGuard;\nexport default AuthGuard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/hoc/authGuardNew.js"],"names":["React","useState","useEffect","useSelector","useLocation","useNavigate","Loader","AuthGuard","users","children","isAuth","setIsAuth","location","navigate","console","log","auth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,OAAOC,MAAP,MAAmB,eAAnB;;;AAEA,MAAMC,SAAS,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAwB;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC,CADuC,CAEvC;;AACA,QAAMW,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACE,MAAlB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACM,KAAK,CAACQ,IAAV,EAAgB;AACZH,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,KAFD,MAEO;AACHF,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,GANQ,EAMN,CAACE,QAAD,EAAWL,KAAK,CAACQ,IAAjB,CANM,CAAT;;AAQA,MAAG,CAACN,MAAJ,EAAY;AACR,wBACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH,GALD,MAKO;AACH,WACID,QADJ;AAGH;AACJ,CAzBD;;GAAMF,S;UAGeH,W,EACAC,W;;;KAJfE,S;AA2BN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport Loader from '/utils/loader';\r\n\r\nconst AuthGuard = ({ users, children }) => {\r\n    const [isAuth, setIsAuth] = useState(false);\r\n    //const users = useSelector(state => state.users);\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    console.log(users.isAuth);\r\n\r\n    useEffect(() => {\r\n        if(!users.auth) {\r\n            navigate('/');\r\n        } else {\r\n            setIsAuth(true);\r\n        }\r\n    }, [navigate, users.auth]);\r\n  \r\n    if(!isAuth) {\r\n        return(\r\n            <Loader full={true} />\r\n\r\n        )\r\n    } else {\r\n        return (\r\n            children\r\n        )\r\n    }\r\n};\r\n\r\nexport default AuthGuard;"]},"metadata":{},"sourceType":"module"}