{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\auth\\\\authForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Loader from 'utils/loader';\nimport { errorHelper } from 'utils/tools';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TextField, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = props => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const formik = useFormik({\n    initialValues: {\n      email: 'taybemuharem@yahoo.co.uk',\n      password: 'testing1234'\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().required('Sorry, email is required').email('This is an invalid email'),\n      password: Yup.string().required('Sorry, password is required')\n    }),\n    onSubmit: values => {\n      console.log(values);\n      setLoading(true);\n      handleSubmit(values);\n    }\n  });\n\n  const handleSubmit = values => {\n    if (props.formType) {//// register\n    } else {//// sign in\n    }\n  };\n\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth_container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"mt-3\",\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formBlock\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: '100%'\n            },\n            name: \"email\",\n            label: \"Enter your email\",\n            variant: \"outlined\",\n            ...formik.getFieldProps('email'),\n            ...errorHelper(formik, 'email')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formBlock\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: '100%'\n            },\n            name: \"password\",\n            label: \"Enter your password\",\n            variant: \"outlined\",\n            type: \"password\",\n            ...formik.getFieldProps('password'),\n            ...errorHelper(formik, 'password')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          size: \"small\",\n          children: props.formType ? 'Register' : 'Sign in'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AuthForm, \"pJ87EHN1dfgLFfg5TTdXt1LPs8E=\", false, function () {\n  return [useFormik];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/auth/authForm.js"],"names":["React","useState","useFormik","Yup","Loader","errorHelper","useDispatch","useSelector","TextField","Button","AuthForm","props","loading","setLoading","formik","initialValues","email","password","validationSchema","object","string","required","onSubmit","values","console","log","handleSubmit","formType","width","getFieldProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Loader from 'utils/loader';\r\nimport { errorHelper } from 'utils/tools';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TextField, Button } from '@mui/material';\r\n\r\nconst AuthForm = ( props ) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const formik = useFormik({\r\n        initialValues: { email: 'taybemuharem@yahoo.co.uk', password: 'testing1234' },\r\n        validationSchema: Yup.object({\r\n            email: Yup.string()\r\n                .required('Sorry, email is required')\r\n                .email('This is an invalid email'),\r\n            password: Yup.string()\r\n                .required('Sorry, password is required')\r\n        }),\r\n        onSubmit: (values) => {\r\n            console.log(values);\r\n            setLoading(true);\r\n            handleSubmit(values);\r\n        }\r\n    });\r\n\r\n    const handleSubmit = (values) => {\r\n        if(props.formType) {\r\n            //// register\r\n        } else {\r\n            //// sign in\r\n        }\r\n    }\r\n    console.log(props);\r\n    return (\r\n        <>\r\n            <div className='auth_container'>\r\n                { loading ?\r\n                    <Loader />\r\n                    :\r\n                    <form className='mt-3' onSubmit={formik.handleSubmit}>\r\n                        <div className='formBlock'>\r\n                            <TextField\r\n                                style={{width: '100%'}}\r\n                                name=\"email\"\r\n                                label=\"Enter your email\"\r\n                                variant=\"outlined\"\r\n                                {...formik.getFieldProps('email')}\r\n                                {...errorHelper(formik, 'email')}\r\n                            />\r\n                        </div>\r\n                        <div className='formBlock'>\r\n                            <TextField\r\n                                style={{width: '100%'}}\r\n                                name=\"password\"\r\n                                label=\"Enter your password\"\r\n                                variant=\"outlined\"\r\n                                type=\"password\"\r\n                                {...formik.getFieldProps('password')}\r\n                                {...errorHelper(formik, 'password')}\r\n                            />\r\n                        </div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            size=\"small\"\r\n                        >\r\n                            { props.formType ? 'Register' : 'Sign in' }\r\n                        </Button>\r\n                    </form>\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;"]},"metadata":{},"sourceType":"module"}