{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\waves\\\\client\\\\src\\\\components\\\\dashboard\\\\user\\\\cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DashboardLayout from 'components/hoc/dashboardLayout';\nimport Loader from 'utils/loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CartDetail from './cartDetail';\nimport { userRemoveFromCart, userPurchaseSuccess } from 'store/actions/user.actions';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserCart = _ref => {\n  _s();\n\n  let {\n    users\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const notifications = useSelector(state => state.notifications);\n  const dispatch = useDispatch();\n\n  const removeItem = position => {\n    dispatch(userRemoveFromCart(position));\n  };\n\n  const calculateTotal = () => {\n    let total = 0;\n    users.cart.forEach(element => {\n      total += parseInt(element.price, 10);\n    });\n    return total;\n  };\n\n  const generateUnits = () => [{\n    description: \"Guitars and accessories\",\n    amount: {\n      currency_code: \"USD\",\n      value: calculateTotal(),\n      breakdown: {\n        item_total: {\n          currency_code: \"USD\",\n          value: calculateTotal()\n        }\n      }\n    },\n    items: generateItems()\n  }];\n\n  const generateItems = () => {\n    let items = users.cart.map(item => ({\n      unit_amount: {\n        currency_code: \"USD\",\n        value: item.price\n      },\n      quantity: 1,\n      name: item.model\n    }));\n    return items;\n  };\n\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    title: \"Your Cart\",\n    children: users.cart && users.cart.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CartDetail, {\n        products: users.cart,\n        removeItem: position => removeItem(position)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_cart_sum\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Total Amount: $\", calculateTotal(), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pp_button\",\n            children: /*#__PURE__*/_jsxDEV(PayPalButton, {\n              options: {\n                clientId: \"ATVKKDpfLJZ2-njiZs0djpb-PnEplG_p-er7MQEeVk7doKcQX9NMdeZdvyGmhcYfK2rjcXfmjxlH__p4\",\n                currency: \"USD\",\n                disableFunding: 'credit,card'\n              },\n              createOrder: (data, actions) => {\n                return actions.order.create({\n                  purchase_units: generateUnits()\n                });\n              },\n              onSuccess: (details, data) => {\n                // console.log(details)\n                // console.log(data)\n                dispatch(userPurchaseSuccess(details.id));\n                setLoading(true);\n              },\n              onCancel: data => {\n                setLoading(false);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"There is nothing in your cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserCart, \"JCSjs25ZJuj+10n+pQV9RcwuKOQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = UserCart;\nexport default UserCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserCart\");","map":{"version":3,"sources":["C:/React/waves/client/src/components/dashboard/user/cart.js"],"names":["React","useState","DashboardLayout","Loader","useDispatch","useSelector","CartDetail","userRemoveFromCart","userPurchaseSuccess","PayPalButton","UserCart","users","loading","setLoading","notifications","state","dispatch","removeItem","position","calculateTotal","total","cart","forEach","element","parseInt","price","generateUnits","description","amount","currency_code","value","breakdown","item_total","items","generateItems","map","item","unit_amount","quantity","name","model","length","clientId","currency","disableFunding","data","actions","order","create","purchase_units","details","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport DashboardLayout from 'components/hoc/dashboardLayout';\r\nimport Loader from 'utils/loader';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CartDetail from './cartDetail';\r\nimport { userRemoveFromCart, userPurchaseSuccess } from 'store/actions/user.actions';\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\n\r\nconst UserCart = ({users}) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const notifications = useSelector(state => state.notifications);\r\n    const dispatch = useDispatch();\r\n\r\n    const removeItem = (position) => {\r\n        dispatch(userRemoveFromCart(position));\r\n    }\r\n\r\n    const calculateTotal = () => {\r\n        let total = 0;\r\n        users.cart.forEach(element => {\r\n            total += parseInt(element.price, 10);\r\n        });\r\n        return total;\r\n    }\r\n\r\n    const generateUnits = () => (\r\n        [{\r\n            description: \"Guitars and accessories\",\r\n            amount: {\r\n                currency_code: \"USD\",\r\n                value: calculateTotal(),\r\n                breakdown: {\r\n                    item_total: {\r\n                        currency_code: \"USD\",\r\n                        value: calculateTotal()\r\n                    }\r\n                }\r\n            },\r\n            items: generateItems()\r\n        }]\r\n    )\r\n\r\n    const generateItems = () => {\r\n        let items = users.cart.map((item) => (\r\n            {\r\n                unit_amount: {\r\n                    currency_code: \"USD\",\r\n                    value: item.price\r\n                },\r\n                quantity: 1,\r\n                name: item.model\r\n            }\r\n        ))\r\n        return items;\r\n    }\r\n\r\n    return (\r\n        <DashboardLayout title=\"Your Cart\">\r\n            { users.cart && users.cart.length > 0 ?\r\n                    <>\r\n                        <CartDetail \r\n                            products={users.cart}\r\n                            removeItem={(position) => removeItem(position)}\r\n                        />\r\n                        <div className='user_cart_sum'>\r\n                            <div>\r\n                                Total Amount: ${calculateTotal()}\r\n                                { loading ? \r\n                                        <Loader />\r\n                                    :\r\n                                        <div className='pp_button'>\r\n                                            <PayPalButton \r\n                                                options={{\r\n                                                    clientId: \"ATVKKDpfLJZ2-njiZs0djpb-PnEplG_p-er7MQEeVk7doKcQX9NMdeZdvyGmhcYfK2rjcXfmjxlH__p4\",\r\n                                                    currency: \"USD\",\r\n                                                    disableFunding: 'credit,card'\r\n                                                }}\r\n                                                createOrder={(data, actions) => {\r\n                                                    return actions.order.create({\r\n                                                        purchase_units: generateUnits()\r\n                                                    })\r\n                                                }}\r\n                                                onSuccess={(details, data) => {\r\n                                                    // console.log(details)\r\n                                                    // console.log(data)\r\n                                                    dispatch(userPurchaseSuccess(details.id));\r\n                                                    setLoading(true);\r\n                                                }}\r\n                                                onCancel={(data) => {\r\n                                                    setLoading(false);\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                :\r\n                    <div>There is nothing in your cart</div>\r\n            }\r\n        </DashboardLayout>\r\n    )\r\n}\r\n\r\nexport default UserCart;"]},"metadata":{},"sourceType":"module"}